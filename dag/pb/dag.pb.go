// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dag.proto

package dagpb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	Children             []int32  `protobuf:"varint,3,rep,packed,name=Children,proto3" json:"Children,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_228b96b95413374c, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Node) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Node) GetChildren() []int32 {
	if m != nil {
		return m.Children
	}
	return nil
}

type Dag struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dag) Reset()         { *m = Dag{} }
func (m *Dag) String() string { return proto.CompactTextString(m) }
func (*Dag) ProtoMessage()    {}
func (*Dag) Descriptor() ([]byte, []int) {
	return fileDescriptor_228b96b95413374c, []int{1}
}
func (m *Dag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dag.Unmarshal(m, b)
}
func (m *Dag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dag.Marshal(b, m, deterministic)
}
func (m *Dag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dag.Merge(m, src)
}
func (m *Dag) XXX_Size() int {
	return xxx_messageInfo_Dag.Size(m)
}
func (m *Dag) XXX_DiscardUnknown() {
	xxx_messageInfo_Dag.DiscardUnknown(m)
}

var xxx_messageInfo_Dag proto.InternalMessageInfo

func (m *Dag) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "dagpb.Node")
	proto.RegisterType((*Dag)(nil), "dagpb.Dag")
}

func init() { proto.RegisterFile("dag.proto", fileDescriptor_228b96b95413374c) }

var fileDescriptor_228b96b95413374c = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x49, 0x4c, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x49, 0x4c, 0x2f, 0x48, 0x52, 0xf2, 0xe2, 0x62,
	0xf1, 0xcb, 0x4f, 0x49, 0x15, 0x12, 0xe0, 0x62, 0xf6, 0x4e, 0xad, 0x94, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x02, 0x31, 0x85, 0x44, 0xb8, 0x58, 0x3d, 0xf3, 0x52, 0x52, 0x2b, 0x24, 0x98, 0x14,
	0x18, 0x35, 0x58, 0x83, 0x20, 0x1c, 0x21, 0x29, 0x2e, 0x0e, 0xe7, 0x8c, 0xcc, 0x9c, 0x94, 0xa2,
	0xd4, 0x3c, 0x09, 0x66, 0x05, 0x66, 0x0d, 0xd6, 0x20, 0x38, 0x5f, 0x49, 0x83, 0x8b, 0xd9, 0x25,
	0x31, 0x5d, 0x48, 0x91, 0x8b, 0x15, 0x64, 0x64, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x11,
	0xb7, 0x1e, 0xd8, 0x26, 0x3d, 0x90, 0x58, 0x10, 0x44, 0x26, 0x89, 0x0d, 0xec, 0x06, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xe8, 0x64, 0x64, 0x90, 0x00, 0x00, 0x00,
}
