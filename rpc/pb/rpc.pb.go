// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc.proto

package rpcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Request message of non params.
type NonParamsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonParamsRequest) Reset()         { *m = NonParamsRequest{} }
func (m *NonParamsRequest) String() string { return proto.CompactTextString(m) }
func (*NonParamsRequest) ProtoMessage()    {}
func (*NonParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}
func (m *NonParamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonParamsRequest.Unmarshal(m, b)
}
func (m *NonParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonParamsRequest.Marshal(b, m, deterministic)
}
func (m *NonParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonParamsRequest.Merge(m, src)
}
func (m *NonParamsRequest) XXX_Size() int {
	return xxx_messageInfo_NonParamsRequest.Size(m)
}
func (m *NonParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NonParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NonParamsRequest proto.InternalMessageInfo

type BoolResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoolResponse) Reset()         { *m = BoolResponse{} }
func (m *BoolResponse) String() string { return proto.CompactTextString(m) }
func (*BoolResponse) ProtoMessage()    {}
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}
func (m *BoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoolResponse.Unmarshal(m, b)
}
func (m *BoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoolResponse.Marshal(b, m, deterministic)
}
func (m *BoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoolResponse.Merge(m, src)
}
func (m *BoolResponse) XXX_Size() int {
	return xxx_messageInfo_BoolResponse.Size(m)
}
func (m *BoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BoolResponse proto.InternalMessageInfo

func (m *BoolResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Response message of Accounts rpc.
type AccountsResponse struct {
	// Account list
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountsResponse) Reset()         { *m = AccountsResponse{} }
func (m *AccountsResponse) String() string { return proto.CompactTextString(m) }
func (*AccountsResponse) ProtoMessage()    {}
func (*AccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}
func (m *AccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsResponse.Unmarshal(m, b)
}
func (m *AccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsResponse.Marshal(b, m, deterministic)
}
func (m *AccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsResponse.Merge(m, src)
}
func (m *AccountsResponse) XXX_Size() int {
	return xxx_messageInfo_AccountsResponse.Size(m)
}
func (m *AccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsResponse proto.InternalMessageInfo

func (m *AccountsResponse) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type PassphraseRequest struct {
	Passphrase           string   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassphraseRequest) Reset()         { *m = PassphraseRequest{} }
func (m *PassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*PassphraseRequest) ProtoMessage()    {}
func (*PassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}
func (m *PassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassphraseRequest.Unmarshal(m, b)
}
func (m *PassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassphraseRequest.Marshal(b, m, deterministic)
}
func (m *PassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassphraseRequest.Merge(m, src)
}
func (m *PassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_PassphraseRequest.Size(m)
}
func (m *PassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PassphraseRequest proto.InternalMessageInfo

func (m *PassphraseRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type NewAccountResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Memo                 string   `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAccountResponse) Reset()         { *m = NewAccountResponse{} }
func (m *NewAccountResponse) String() string { return proto.CompactTextString(m) }
func (*NewAccountResponse) ProtoMessage()    {}
func (*NewAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}
func (m *NewAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountResponse.Unmarshal(m, b)
}
func (m *NewAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountResponse.Marshal(b, m, deterministic)
}
func (m *NewAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountResponse.Merge(m, src)
}
func (m *NewAccountResponse) XXX_Size() int {
	return xxx_messageInfo_NewAccountResponse.Size(m)
}
func (m *NewAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewAccountResponse proto.InternalMessageInfo

func (m *NewAccountResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NewAccountResponse) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

type UpdateAccountRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldPassphrase        string   `protobuf:"bytes,2,opt,name=old_passphrase,json=oldPassphrase,proto3" json:"old_passphrase,omitempty"`
	NewPassphrase        string   `protobuf:"bytes,3,opt,name=new_passphrase,json=newPassphrase,proto3" json:"new_passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAccountRequest) Reset()         { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()    {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}
func (m *UpdateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountRequest.Unmarshal(m, b)
}
func (m *UpdateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountRequest.Merge(m, src)
}
func (m *UpdateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountRequest.Size(m)
}
func (m *UpdateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountRequest proto.InternalMessageInfo

func (m *UpdateAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UpdateAccountRequest) GetOldPassphrase() string {
	if m != nil {
		return m.OldPassphrase
	}
	return ""
}

func (m *UpdateAccountRequest) GetNewPassphrase() string {
	if m != nil {
		return m.NewPassphrase
	}
	return ""
}

type PrivKeyAndPassphrase struct {
	PriKey               string   `protobuf:"bytes,1,opt,name=pri_key,json=priKey,proto3" json:"pri_key,omitempty"`
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivKeyAndPassphrase) Reset()         { *m = PrivKeyAndPassphrase{} }
func (m *PrivKeyAndPassphrase) String() string { return proto.CompactTextString(m) }
func (*PrivKeyAndPassphrase) ProtoMessage()    {}
func (*PrivKeyAndPassphrase) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}
func (m *PrivKeyAndPassphrase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivKeyAndPassphrase.Unmarshal(m, b)
}
func (m *PrivKeyAndPassphrase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivKeyAndPassphrase.Marshal(b, m, deterministic)
}
func (m *PrivKeyAndPassphrase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivKeyAndPassphrase.Merge(m, src)
}
func (m *PrivKeyAndPassphrase) XXX_Size() int {
	return xxx_messageInfo_PrivKeyAndPassphrase.Size(m)
}
func (m *PrivKeyAndPassphrase) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivKeyAndPassphrase.DiscardUnknown(m)
}

var xxx_messageInfo_PrivKeyAndPassphrase proto.InternalMessageInfo

func (m *PrivKeyAndPassphrase) GetPriKey() string {
	if m != nil {
		return m.PriKey
	}
	return ""
}

func (m *PrivKeyAndPassphrase) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type ExportPrivateKeyRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportPrivateKeyRequest) Reset()         { *m = ExportPrivateKeyRequest{} }
func (m *ExportPrivateKeyRequest) String() string { return proto.CompactTextString(m) }
func (*ExportPrivateKeyRequest) ProtoMessage()    {}
func (*ExportPrivateKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}
func (m *ExportPrivateKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportPrivateKeyRequest.Unmarshal(m, b)
}
func (m *ExportPrivateKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportPrivateKeyRequest.Marshal(b, m, deterministic)
}
func (m *ExportPrivateKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportPrivateKeyRequest.Merge(m, src)
}
func (m *ExportPrivateKeyRequest) XXX_Size() int {
	return xxx_messageInfo_ExportPrivateKeyRequest.Size(m)
}
func (m *ExportPrivateKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportPrivateKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportPrivateKeyRequest proto.InternalMessageInfo

func (m *ExportPrivateKeyRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ExportPrivateKeyRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{8}
}
func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type UnlockAccountRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Duration             uint64   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockAccountRequest) Reset()         { *m = UnlockAccountRequest{} }
func (m *UnlockAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockAccountRequest) ProtoMessage()    {}
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{9}
}
func (m *UnlockAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockAccountRequest.Unmarshal(m, b)
}
func (m *UnlockAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockAccountRequest.Marshal(b, m, deterministic)
}
func (m *UnlockAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockAccountRequest.Merge(m, src)
}
func (m *UnlockAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockAccountRequest.Size(m)
}
func (m *UnlockAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockAccountRequest proto.InternalMessageInfo

func (m *UnlockAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UnlockAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *UnlockAccountRequest) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type LockAccountRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockAccountRequest) Reset()         { *m = LockAccountRequest{} }
func (m *LockAccountRequest) String() string { return proto.CompactTextString(m) }
func (*LockAccountRequest) ProtoMessage()    {}
func (*LockAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{10}
}
func (m *LockAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockAccountRequest.Unmarshal(m, b)
}
func (m *LockAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockAccountRequest.Marshal(b, m, deterministic)
}
func (m *LockAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockAccountRequest.Merge(m, src)
}
func (m *LockAccountRequest) XXX_Size() int {
	return xxx_messageInfo_LockAccountRequest.Size(m)
}
func (m *LockAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockAccountRequest proto.InternalMessageInfo

func (m *LockAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Request message of SendTransaction rpc.
type TransactionRequest struct {
	// Base58 string of the sender account addresss.
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// Base58 string of the receiver account addresss.
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// Amount of value sending with this transaction.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Transaction nonce.
	Nonce uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// binary data for transaction
	//hex encode
	Data string `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// transaction payload type, enum:NormalTx, PledgeTx, ContractDeployTx, ContractInvokeTx,ContractChangeStateTx,AuthorizeTx
	Type     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Priority uint32 `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	//transaction memo
	Memo string `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo,omitempty"`
	//gasLimit sending with this transaction
	GasLimit string `protobuf:"bytes,9,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// contract sending with this transaction
	Contract *ContractRequest `protobuf:"bytes,10,opt,name=contract,proto3" json:"contract,omitempty"`
	// contract authorize with this transaction
	Authorize *AuthorizeRequest `protobuf:"bytes,11,opt,name=authorize,proto3" json:"authorize,omitempty"`
	// vote message with this transaction
	Vote                 *VoteRequest `protobuf:"bytes,12,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{11}
}
func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequest.Unmarshal(m, b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
}
func (m *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(m, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionRequest.Size(m)
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func (m *TransactionRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransactionRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransactionRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TransactionRequest) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactionRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *TransactionRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TransactionRequest) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *TransactionRequest) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *TransactionRequest) GetGasLimit() string {
	if m != nil {
		return m.GasLimit
	}
	return ""
}

func (m *TransactionRequest) GetContract() *ContractRequest {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *TransactionRequest) GetAuthorize() *AuthorizeRequest {
	if m != nil {
		return m.Authorize
	}
	return nil
}

func (m *TransactionRequest) GetVote() *VoteRequest {
	if m != nil {
		return m.Vote
	}
	return nil
}

type ContractRequest struct {
	// contract source code.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// contract source type, support javascript and typescript
	SourceType string `protobuf:"bytes,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// call contract function name
	Function string `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`
	// the params of contract.
	Args string `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
	// deploy contract default auth flag
	AuthFlag string `protobuf:"bytes,5,opt,name=auth_flag,json=authFlag,proto3" json:"auth_flag,omitempty"`
	// change contract state
	State                int32    `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractRequest) Reset()         { *m = ContractRequest{} }
func (m *ContractRequest) String() string { return proto.CompactTextString(m) }
func (*ContractRequest) ProtoMessage()    {}
func (*ContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{12}
}
func (m *ContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractRequest.Unmarshal(m, b)
}
func (m *ContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractRequest.Marshal(b, m, deterministic)
}
func (m *ContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractRequest.Merge(m, src)
}
func (m *ContractRequest) XXX_Size() int {
	return xxx_messageInfo_ContractRequest.Size(m)
}
func (m *ContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContractRequest proto.InternalMessageInfo

func (m *ContractRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ContractRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *ContractRequest) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *ContractRequest) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func (m *ContractRequest) GetAuthFlag() string {
	if m != nil {
		return m.AuthFlag
	}
	return ""
}

func (m *ContractRequest) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

type AuthorizeRequest struct {
	Commands             []*AuthorizeCmd `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	Address              string          `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Type                 string          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AuthorizeRequest) Reset()         { *m = AuthorizeRequest{} }
func (m *AuthorizeRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizeRequest) ProtoMessage()    {}
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{13}
}
func (m *AuthorizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeRequest.Unmarshal(m, b)
}
func (m *AuthorizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeRequest.Marshal(b, m, deterministic)
}
func (m *AuthorizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeRequest.Merge(m, src)
}
func (m *AuthorizeRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizeRequest.Size(m)
}
func (m *AuthorizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeRequest proto.InternalMessageInfo

func (m *AuthorizeRequest) GetCommands() []*AuthorizeCmd {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *AuthorizeRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AuthorizeRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type AuthorizeCmd struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Func                 string   `protobuf:"bytes,2,opt,name=func,proto3" json:"func,omitempty"`
	Rule                 string   `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeCmd) Reset()         { *m = AuthorizeCmd{} }
func (m *AuthorizeCmd) String() string { return proto.CompactTextString(m) }
func (*AuthorizeCmd) ProtoMessage()    {}
func (*AuthorizeCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{14}
}
func (m *AuthorizeCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeCmd.Unmarshal(m, b)
}
func (m *AuthorizeCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeCmd.Marshal(b, m, deterministic)
}
func (m *AuthorizeCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeCmd.Merge(m, src)
}
func (m *AuthorizeCmd) XXX_Size() int {
	return xxx_messageInfo_AuthorizeCmd.Size(m)
}
func (m *AuthorizeCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeCmd.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeCmd proto.InternalMessageInfo

func (m *AuthorizeCmd) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *AuthorizeCmd) GetFunc() string {
	if m != nil {
		return m.Func
	}
	return ""
}

func (m *AuthorizeCmd) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

type VoteRequest struct {
	VoteType             string   `protobuf:"bytes,1,opt,name=vote_type,json=voteType,proto3" json:"vote_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteRequest) Reset()         { *m = VoteRequest{} }
func (m *VoteRequest) String() string { return proto.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()    {}
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{15}
}
func (m *VoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteRequest.Unmarshal(m, b)
}
func (m *VoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteRequest.Marshal(b, m, deterministic)
}
func (m *VoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteRequest.Merge(m, src)
}
func (m *VoteRequest) XXX_Size() int {
	return xxx_messageInfo_VoteRequest.Size(m)
}
func (m *VoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoteRequest proto.InternalMessageInfo

func (m *VoteRequest) GetVoteType() string {
	if m != nil {
		return m.VoteType
	}
	return ""
}

type TransactionHash struct {
	// Hex string of transaction hash.
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionHash) Reset()         { *m = TransactionHash{} }
func (m *TransactionHash) String() string { return proto.CompactTextString(m) }
func (*TransactionHash) ProtoMessage()    {}
func (*TransactionHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{16}
}
func (m *TransactionHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionHash.Unmarshal(m, b)
}
func (m *TransactionHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionHash.Marshal(b, m, deterministic)
}
func (m *TransactionHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionHash.Merge(m, src)
}
func (m *TransactionHash) XXX_Size() int {
	return xxx_messageInfo_TransactionHash.Size(m)
}
func (m *TransactionHash) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionHash.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionHash proto.InternalMessageInfo

func (m *TransactionHash) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type SignHashRequest struct {
	// sign address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	//hex string of hash
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// sign algorithm
	Alg                  uint32   `protobuf:"varint,3,opt,name=alg,proto3" json:"alg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignHashRequest) Reset()         { *m = SignHashRequest{} }
func (m *SignHashRequest) String() string { return proto.CompactTextString(m) }
func (*SignHashRequest) ProtoMessage()    {}
func (*SignHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{17}
}
func (m *SignHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignHashRequest.Unmarshal(m, b)
}
func (m *SignHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignHashRequest.Marshal(b, m, deterministic)
}
func (m *SignHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignHashRequest.Merge(m, src)
}
func (m *SignHashRequest) XXX_Size() int {
	return xxx_messageInfo_SignHashRequest.Size(m)
}
func (m *SignHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignHashRequest proto.InternalMessageInfo

func (m *SignHashRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SignHashRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SignHashRequest) GetAlg() uint32 {
	if m != nil {
		return m.Alg
	}
	return 0
}

type SignHashResponse struct {
	//hex string of the data
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignHashResponse) Reset()         { *m = SignHashResponse{} }
func (m *SignHashResponse) String() string { return proto.CompactTextString(m) }
func (*SignHashResponse) ProtoMessage()    {}
func (*SignHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{18}
}
func (m *SignHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignHashResponse.Unmarshal(m, b)
}
func (m *SignHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignHashResponse.Marshal(b, m, deterministic)
}
func (m *SignHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignHashResponse.Merge(m, src)
}
func (m *SignHashResponse) XXX_Size() int {
	return xxx_messageInfo_SignHashResponse.Size(m)
}
func (m *SignHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignHashResponse proto.InternalMessageInfo

func (m *SignHashResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type VerifyMessageRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	//hex string of signature
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	//hex string of sign msg
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyMessageRequest) Reset()         { *m = VerifyMessageRequest{} }
func (m *VerifyMessageRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyMessageRequest) ProtoMessage()    {}
func (*VerifyMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{19}
}
func (m *VerifyMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyMessageRequest.Unmarshal(m, b)
}
func (m *VerifyMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyMessageRequest.Marshal(b, m, deterministic)
}
func (m *VerifyMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyMessageRequest.Merge(m, src)
}
func (m *VerifyMessageRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyMessageRequest.Size(m)
}
func (m *VerifyMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyMessageRequest proto.InternalMessageInfo

func (m *VerifyMessageRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *VerifyMessageRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *VerifyMessageRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SignTransactionPassphraseResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionPassphraseResponse) Reset()         { *m = SignTransactionPassphraseResponse{} }
func (m *SignTransactionPassphraseResponse) String() string { return proto.CompactTextString(m) }
func (*SignTransactionPassphraseResponse) ProtoMessage()    {}
func (*SignTransactionPassphraseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{20}
}
func (m *SignTransactionPassphraseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionPassphraseResponse.Unmarshal(m, b)
}
func (m *SignTransactionPassphraseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionPassphraseResponse.Marshal(b, m, deterministic)
}
func (m *SignTransactionPassphraseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionPassphraseResponse.Merge(m, src)
}
func (m *SignTransactionPassphraseResponse) XXX_Size() int {
	return xxx_messageInfo_SignTransactionPassphraseResponse.Size(m)
}
func (m *SignTransactionPassphraseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionPassphraseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionPassphraseResponse proto.InternalMessageInfo

func (m *SignTransactionPassphraseResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendTransactionPassphraseRequest struct {
	// transaction struct
	Transaction *TransactionRequest `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// from account passphrase
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionPassphraseRequest) Reset()         { *m = SendTransactionPassphraseRequest{} }
func (m *SendTransactionPassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionPassphraseRequest) ProtoMessage()    {}
func (*SendTransactionPassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{21}
}
func (m *SendTransactionPassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionPassphraseRequest.Unmarshal(m, b)
}
func (m *SendTransactionPassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionPassphraseRequest.Marshal(b, m, deterministic)
}
func (m *SendTransactionPassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionPassphraseRequest.Merge(m, src)
}
func (m *SendTransactionPassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionPassphraseRequest.Size(m)
}
func (m *SendTransactionPassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionPassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionPassphraseRequest proto.InternalMessageInfo

func (m *SendTransactionPassphraseRequest) GetTransaction() *TransactionRequest {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SendTransactionPassphraseRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type SignTransactionPassphraseRequest struct {
	// transaction struct
	Transaction *TransactionRequest `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// from account passphrase
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionPassphraseRequest) Reset()         { *m = SignTransactionPassphraseRequest{} }
func (m *SignTransactionPassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionPassphraseRequest) ProtoMessage()    {}
func (*SignTransactionPassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{22}
}
func (m *SignTransactionPassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionPassphraseRequest.Unmarshal(m, b)
}
func (m *SignTransactionPassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionPassphraseRequest.Marshal(b, m, deterministic)
}
func (m *SignTransactionPassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionPassphraseRequest.Merge(m, src)
}
func (m *SignTransactionPassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionPassphraseRequest.Size(m)
}
func (m *SignTransactionPassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionPassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionPassphraseRequest proto.InternalMessageInfo

func (m *SignTransactionPassphraseRequest) GetTransaction() *TransactionRequest {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SignTransactionPassphraseRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type NetVersion struct {
	NetworkId            uint32   `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ClientVersion        string   `protobuf:"bytes,2,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ProtocolVersion      string   `protobuf:"bytes,3,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	Listen               []string `protobuf:"bytes,4,rep,name=listen,proto3" json:"listen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetVersion) Reset()         { *m = NetVersion{} }
func (m *NetVersion) String() string { return proto.CompactTextString(m) }
func (*NetVersion) ProtoMessage()    {}
func (*NetVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{23}
}
func (m *NetVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetVersion.Unmarshal(m, b)
}
func (m *NetVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetVersion.Marshal(b, m, deterministic)
}
func (m *NetVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetVersion.Merge(m, src)
}
func (m *NetVersion) XXX_Size() int {
	return xxx_messageInfo_NetVersion.Size(m)
}
func (m *NetVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_NetVersion.DiscardUnknown(m)
}

var xxx_messageInfo_NetVersion proto.InternalMessageInfo

func (m *NetVersion) GetNetworkId() uint32 {
	if m != nil {
		return m.NetworkId
	}
	return 0
}

func (m *NetVersion) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *NetVersion) GetProtocolVersion() string {
	if m != nil {
		return m.ProtocolVersion
	}
	return ""
}

func (m *NetVersion) GetListen() []string {
	if m != nil {
		return m.Listen
	}
	return nil
}

type NodeInfoResponse struct {
	//the id of the current node
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//coinbase address
	Coinbase string `protobuf:"bytes,2,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	//tail block height
	TailHeight uint64 `protobuf:"varint,3,opt,name=tail_height,json=tailHeight,proto3" json:"tail_height,omitempty"`
	//confirm block height
	ConfirmHeight uint64 `protobuf:"varint,4,opt,name=confirm_height,json=confirmHeight,proto3" json:"confirm_height,omitempty"`
	//The id of the chain in which the node is located
	ChainId uint32 `protobuf:"varint,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// the node synchronized status.
	Synchronized bool `protobuf:"varint,6,opt,name=synchronized,proto3" json:"synchronized,omitempty"`
	// the node route table bucket size.
	BucketSize int32 `protobuf:"varint,7,opt,name=bucket_size,json=bucketSize,proto3" json:"bucket_size,omitempty"`
	//net version info
	NetVersion *NetVersion `protobuf:"bytes,8,opt,name=net_version,json=netVersion,proto3" json:"net_version,omitempty"`
	//active count
	ActiveCount uint32 `protobuf:"varint,9,opt,name=active_count,json=activeCount,proto3" json:"active_count,omitempty"`
	//The peers to which this node is connected
	PeerIds              []string `protobuf:"bytes,10,rep,name=peer_ids,json=peerIds,proto3" json:"peer_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfoResponse) Reset()         { *m = NodeInfoResponse{} }
func (m *NodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*NodeInfoResponse) ProtoMessage()    {}
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{24}
}
func (m *NodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoResponse.Unmarshal(m, b)
}
func (m *NodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *NodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoResponse.Merge(m, src)
}
func (m *NodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_NodeInfoResponse.Size(m)
}
func (m *NodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoResponse proto.InternalMessageInfo

func (m *NodeInfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeInfoResponse) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *NodeInfoResponse) GetTailHeight() uint64 {
	if m != nil {
		return m.TailHeight
	}
	return 0
}

func (m *NodeInfoResponse) GetConfirmHeight() uint64 {
	if m != nil {
		return m.ConfirmHeight
	}
	return 0
}

func (m *NodeInfoResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *NodeInfoResponse) GetSynchronized() bool {
	if m != nil {
		return m.Synchronized
	}
	return false
}

func (m *NodeInfoResponse) GetBucketSize() int32 {
	if m != nil {
		return m.BucketSize
	}
	return 0
}

func (m *NodeInfoResponse) GetNetVersion() *NetVersion {
	if m != nil {
		return m.NetVersion
	}
	return nil
}

func (m *NodeInfoResponse) GetActiveCount() uint32 {
	if m != nil {
		return m.ActiveCount
	}
	return 0
}

func (m *NodeInfoResponse) GetPeerIds() []string {
	if m != nil {
		return m.PeerIds
	}
	return nil
}

type LoggingInfo struct {
	LogLevel             string   `protobuf:"bytes,1,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	LogPath              string   `protobuf:"bytes,2,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	RotationTime         uint32   `protobuf:"varint,3,opt,name=rotation_time,json=rotationTime,proto3" json:"rotation_time,omitempty"`
	LogAge               uint32   `protobuf:"varint,4,opt,name=log_age,json=logAge,proto3" json:"log_age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoggingInfo) Reset()         { *m = LoggingInfo{} }
func (m *LoggingInfo) String() string { return proto.CompactTextString(m) }
func (*LoggingInfo) ProtoMessage()    {}
func (*LoggingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{25}
}
func (m *LoggingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggingInfo.Unmarshal(m, b)
}
func (m *LoggingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggingInfo.Marshal(b, m, deterministic)
}
func (m *LoggingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingInfo.Merge(m, src)
}
func (m *LoggingInfo) XXX_Size() int {
	return xxx_messageInfo_LoggingInfo.Size(m)
}
func (m *LoggingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingInfo proto.InternalMessageInfo

func (m *LoggingInfo) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *LoggingInfo) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

func (m *LoggingInfo) GetRotationTime() uint32 {
	if m != nil {
		return m.RotationTime
	}
	return 0
}

func (m *LoggingInfo) GetLogAge() uint32 {
	if m != nil {
		return m.LogAge
	}
	return 0
}

type PrivateKey struct {
	PriKey               string   `protobuf:"bytes,1,opt,name=pri_key,json=priKey,proto3" json:"pri_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateKey) Reset()         { *m = PrivateKey{} }
func (m *PrivateKey) String() string { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()    {}
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{26}
}
func (m *PrivateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey.Unmarshal(m, b)
}
func (m *PrivateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey.Marshal(b, m, deterministic)
}
func (m *PrivateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey.Merge(m, src)
}
func (m *PrivateKey) XXX_Size() int {
	return xxx_messageInfo_PrivateKey.Size(m)
}
func (m *PrivateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey proto.InternalMessageInfo

func (m *PrivateKey) GetPriKey() string {
	if m != nil {
		return m.PriKey
	}
	return ""
}

func init() {
	proto.RegisterType((*NonParamsRequest)(nil), "rpcpb.NonParamsRequest")
	proto.RegisterType((*BoolResponse)(nil), "rpcpb.BoolResponse")
	proto.RegisterType((*AccountsResponse)(nil), "rpcpb.AccountsResponse")
	proto.RegisterType((*PassphraseRequest)(nil), "rpcpb.PassphraseRequest")
	proto.RegisterType((*NewAccountResponse)(nil), "rpcpb.NewAccountResponse")
	proto.RegisterType((*UpdateAccountRequest)(nil), "rpcpb.UpdateAccountRequest")
	proto.RegisterType((*PrivKeyAndPassphrase)(nil), "rpcpb.privKeyAndPassphrase")
	proto.RegisterType((*ExportPrivateKeyRequest)(nil), "rpcpb.ExportPrivateKeyRequest")
	proto.RegisterType((*Address)(nil), "rpcpb.Address")
	proto.RegisterType((*UnlockAccountRequest)(nil), "rpcpb.UnlockAccountRequest")
	proto.RegisterType((*LockAccountRequest)(nil), "rpcpb.LockAccountRequest")
	proto.RegisterType((*TransactionRequest)(nil), "rpcpb.TransactionRequest")
	proto.RegisterType((*ContractRequest)(nil), "rpcpb.ContractRequest")
	proto.RegisterType((*AuthorizeRequest)(nil), "rpcpb.AuthorizeRequest")
	proto.RegisterType((*AuthorizeCmd)(nil), "rpcpb.AuthorizeCmd")
	proto.RegisterType((*VoteRequest)(nil), "rpcpb.VoteRequest")
	proto.RegisterType((*TransactionHash)(nil), "rpcpb.TransactionHash")
	proto.RegisterType((*SignHashRequest)(nil), "rpcpb.SignHashRequest")
	proto.RegisterType((*SignHashResponse)(nil), "rpcpb.SignHashResponse")
	proto.RegisterType((*VerifyMessageRequest)(nil), "rpcpb.VerifyMessageRequest")
	proto.RegisterType((*SignTransactionPassphraseResponse)(nil), "rpcpb.SignTransactionPassphraseResponse")
	proto.RegisterType((*SendTransactionPassphraseRequest)(nil), "rpcpb.SendTransactionPassphraseRequest")
	proto.RegisterType((*SignTransactionPassphraseRequest)(nil), "rpcpb.SignTransactionPassphraseRequest")
	proto.RegisterType((*NetVersion)(nil), "rpcpb.NetVersion")
	proto.RegisterType((*NodeInfoResponse)(nil), "rpcpb.NodeInfoResponse")
	proto.RegisterType((*LoggingInfo)(nil), "rpcpb.LoggingInfo")
	proto.RegisterType((*PrivateKey)(nil), "rpcpb.PrivateKey")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 1666 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x5f, 0x6f, 0x1c, 0x49,
	0x11, 0xd7, 0x6e, 0xd6, 0xde, 0xdd, 0x5a, 0xaf, 0xed, 0x74, 0x8c, 0x33, 0xde, 0x38, 0xc1, 0xe9,
	0x70, 0x39, 0x73, 0x12, 0x36, 0xf8, 0x84, 0x90, 0xe0, 0xc9, 0x17, 0xc1, 0x9d, 0x15, 0x5f, 0xce,
	0x1a, 0xe7, 0x92, 0xf0, 0xc2, 0xd2, 0x99, 0x69, 0xcf, 0x36, 0x99, 0xed, 0x9e, 0xeb, 0xe9, 0x5d,
	0xe3, 0x7b, 0x00, 0x09, 0x9e, 0x91, 0x90, 0x10, 0x9f, 0x80, 0x67, 0x3e, 0x0d, 0x2f, 0x7c, 0x00,
	0x1e, 0xf9, 0x10, 0xa8, 0x7a, 0xba, 0x67, 0xc6, 0xfb, 0x27, 0x7b, 0x27, 0xa1, 0x7b, 0xeb, 0xae,
	0xa9, 0xfe, 0x55, 0x75, 0x55, 0x57, 0xd5, 0x6f, 0xa0, 0xab, 0xb3, 0xe8, 0x28, 0xd3, 0xca, 0x28,
	0xb2, 0xa6, 0xb3, 0x28, 0x7b, 0x3b, 0xd8, 0x4f, 0x94, 0x4a, 0x52, 0x7e, 0xcc, 0x32, 0x71, 0xcc,
	0xa4, 0x54, 0x86, 0x19, 0xa1, 0x64, 0x5e, 0x28, 0x51, 0x02, 0xdb, 0x2f, 0x94, 0xbc, 0x60, 0x9a,
	0x8d, 0xf3, 0x90, 0x7f, 0x35, 0xe1, 0xb9, 0xa1, 0x4f, 0x61, 0xe3, 0x13, 0xa5, 0xd2, 0x90, 0xe7,
	0x99, 0x92, 0x39, 0x27, 0xbb, 0xb0, 0xae, 0x79, 0x3e, 0x49, 0x4d, 0xd0, 0x38, 0x68, 0x1c, 0x76,
	0x42, 0xb7, 0xa3, 0x3f, 0x86, 0xed, 0xd3, 0x28, 0x52, 0x13, 0x69, 0xf2, 0x52, 0x77, 0x1f, 0xba,
	0x2c, 0x8e, 0x35, 0xcf, 0x73, 0x9e, 0x07, 0x8d, 0x83, 0x3b, 0x87, 0xdd, 0xb0, 0x12, 0xd0, 0x8f,
	0xe1, 0xee, 0x05, 0xcb, 0xf3, 0x6c, 0xa4, 0x59, 0xce, 0x9d, 0x39, 0xf2, 0x08, 0x20, 0x2b, 0x85,
	0xd6, 0x44, 0x37, 0xac, 0x49, 0xe8, 0x27, 0x40, 0x5e, 0xf0, 0x6b, 0x67, 0xa9, 0x34, 0x14, 0x40,
	0xdb, 0xe1, 0xba, 0x23, 0x7e, 0x4b, 0x08, 0xb4, 0xc6, 0x7c, 0xac, 0x82, 0xa6, 0x15, 0xdb, 0x35,
	0xfd, 0x03, 0xec, 0x7c, 0x99, 0xc5, 0xcc, 0xf0, 0x12, 0xa6, 0xb0, 0xbd, 0x1c, 0xe5, 0x03, 0xd8,
	0x54, 0x69, 0x3c, 0xac, 0x79, 0x56, 0xe0, 0xf5, 0x55, 0x1a, 0x57, 0x77, 0x40, 0x35, 0xc9, 0xaf,
	0xeb, 0x6a, 0x77, 0x0a, 0x35, 0xc9, 0xaf, 0x2b, 0x35, 0xfa, 0x05, 0xec, 0x64, 0x5a, 0x4c, 0x9f,
	0xf3, 0x9b, 0x53, 0x59, 0x3f, 0x7e, 0x1f, 0xda, 0x99, 0x16, 0xc3, 0x77, 0xfc, 0xc6, 0xd9, 0x5f,
	0xcf, 0xb4, 0x78, 0xce, 0x6f, 0x66, 0x82, 0xd2, 0x9c, 0x0b, 0xca, 0x25, 0xdc, 0xff, 0xe5, 0xef,
	0x33, 0xa5, 0xcd, 0x85, 0x16, 0x53, 0x66, 0xf8, 0x73, 0x7e, 0xb3, 0xfa, 0x4e, 0xab, 0x40, 0x9f,
	0x40, 0xfb, 0xd4, 0xa9, 0x2e, 0x05, 0xa1, 0x29, 0xec, 0x7c, 0x29, 0x53, 0x15, 0xbd, 0xfb, 0xc6,
	0xa1, 0x5c, 0x61, 0x96, 0x0c, 0xa0, 0x13, 0x4f, 0xb4, 0x7d, 0x96, 0x36, 0x7a, 0xad, 0xb0, 0xdc,
	0xd3, 0x23, 0x20, 0xe7, 0xdf, 0xc2, 0x16, 0xfd, 0x6f, 0x13, 0xc8, 0x4b, 0xcd, 0x64, 0xce, 0x22,
	0x3c, 0xef, 0x0f, 0x10, 0x68, 0x5d, 0x69, 0x35, 0x76, 0xda, 0x76, 0x4d, 0x36, 0xa1, 0x69, 0xfc,
	0x2b, 0x69, 0x1a, 0x45, 0x76, 0x60, 0x6d, 0xca, 0xd2, 0x89, 0xcf, 0x60, 0xb1, 0x41, 0xa9, 0x54,
	0x32, 0xe2, 0x41, 0xcb, 0x7a, 0x56, 0x6c, 0x10, 0x2f, 0x66, 0x86, 0x05, 0x6b, 0x05, 0x1e, 0xae,
	0x51, 0x66, 0x6e, 0x32, 0x1e, 0xac, 0x17, 0x32, 0x5c, 0xe3, 0xd5, 0x32, 0x2d, 0x94, 0x16, 0xe6,
	0x26, 0x68, 0x1f, 0x34, 0x0e, 0xfb, 0x61, 0xb9, 0x2f, 0xdf, 0x69, 0xa7, 0x7a, 0xa7, 0xe4, 0x01,
	0x74, 0x13, 0x96, 0x0f, 0x53, 0x31, 0x16, 0x26, 0xe8, 0xda, 0x0f, 0x9d, 0x84, 0xe5, 0xe7, 0xb8,
	0x27, 0x27, 0xd0, 0x89, 0x94, 0x34, 0x9a, 0x45, 0x26, 0x80, 0x83, 0xc6, 0x61, 0xef, 0x64, 0xf7,
	0xc8, 0xd6, 0xf8, 0xd1, 0x33, 0x27, 0x76, 0xd7, 0x0d, 0x4b, 0x3d, 0xf2, 0x53, 0xe8, 0xb2, 0x89,
	0x19, 0x29, 0x2d, 0xbe, 0xe6, 0x41, 0xcf, 0x1e, 0xba, 0xef, 0x0e, 0x9d, 0x7a, 0xb9, 0x3f, 0x55,
	0x69, 0x92, 0xa7, 0xd0, 0x9a, 0x2a, 0xc3, 0x83, 0x0d, 0x7b, 0x82, 0xb8, 0x13, 0xaf, 0x94, 0x29,
	0x95, 0xed, 0x77, 0xfa, 0xcf, 0x06, 0x6c, 0xcd, 0x18, 0xc7, 0x76, 0x91, 0xab, 0x89, 0x8e, 0x7c,
	0x2d, 0xbb, 0x1d, 0xf9, 0x3e, 0xf4, 0x8a, 0xd5, 0xd0, 0x86, 0xc9, 0xbd, 0x83, 0x42, 0xf4, 0xd2,
	0x05, 0xeb, 0x6a, 0x22, 0xa3, 0xf2, 0x1d, 0x74, 0xc3, 0x72, 0x8f, 0xc1, 0x62, 0x3a, 0xc9, 0x6d,
	0x16, 0xba, 0xa1, 0x5d, 0x63, 0xb0, 0xd0, 0xe3, 0xe1, 0x55, 0xca, 0x12, 0x97, 0x89, 0x0e, 0x0a,
	0x7e, 0x95, 0xb2, 0x04, 0xf3, 0x96, 0x1b, 0x66, 0x8a, 0x74, 0xac, 0x85, 0xc5, 0x86, 0x7e, 0x05,
	0xdb, 0xb3, 0xd7, 0x26, 0xc7, 0x18, 0xd6, 0xf1, 0x98, 0xc9, 0xb8, 0xe8, 0x58, 0xbd, 0x93, 0x7b,
	0xb3, 0x11, 0x7a, 0x36, 0x8e, 0xc3, 0x52, 0xa9, 0xfe, 0xfa, 0x9a, 0x73, 0xad, 0xc7, 0xde, 0xed,
	0x4e, 0xf5, 0x04, 0xe8, 0x05, 0x6c, 0xd4, 0x71, 0xf0, 0xb4, 0x43, 0xf2, 0x6f, 0xd7, 0x6d, 0xed,
	0x23, 0x9d, 0xc8, 0xc8, 0x37, 0x2e, 0x5c, 0xa3, 0x4c, 0x4f, 0xd2, 0x12, 0x11, 0xd7, 0xf4, 0x23,
	0xe8, 0xd5, 0x32, 0x81, 0x61, 0xc0, 0x5c, 0x14, 0x51, 0x2d, 0x20, 0x3b, 0x28, 0xc0, 0x98, 0xd2,
	0x0f, 0x60, 0xab, 0x56, 0x0e, 0x9f, 0xb1, 0x7c, 0x84, 0x90, 0x23, 0x96, 0x8f, 0x7c, 0x2d, 0xe0,
	0x9a, 0xbe, 0x86, 0xad, 0x4b, 0x91, 0xd8, 0xef, 0xab, 0xeb, 0x39, 0x80, 0xf6, 0x98, 0xe7, 0x39,
	0x4b, 0x7c, 0x12, 0xfd, 0x96, 0x6c, 0xc3, 0x1d, 0x96, 0x26, 0xd6, 0xd9, 0x7e, 0x88, 0x4b, 0xfa,
	0x14, 0xb6, 0x2b, 0x60, 0xd7, 0xba, 0x7d, 0xf1, 0x34, 0xaa, 0xe2, 0xa1, 0x23, 0xd8, 0x79, 0xc5,
	0xb5, 0xb8, 0xba, 0xf9, 0xbc, 0x80, 0x5a, 0xed, 0xc5, 0x3e, 0x74, 0x73, 0x91, 0x48, 0x66, 0x26,
	0xda, 0xfb, 0x51, 0x09, 0xea, 0x3e, 0xde, 0xb9, 0xe5, 0x23, 0xfd, 0x19, 0x3c, 0x46, 0x8f, 0x6a,
	0x51, 0xa9, 0x8f, 0xa4, 0x05, 0x2e, 0x6e, 0x38, 0x17, 0xff, 0x08, 0x07, 0x97, 0x5c, 0xc6, 0x4b,
	0x0e, 0x16, 0xee, 0xfe, 0x02, 0x7a, 0xa6, 0xfa, 0x6e, 0x8f, 0xf7, 0x4e, 0xf6, 0xdc, 0x73, 0x9a,
	0xef, 0x4b, 0x61, 0x5d, 0x7b, 0x65, 0x7b, 0x46, 0x07, 0x96, 0x7b, 0xfe, 0x1d, 0x38, 0xf0, 0xf7,
	0x06, 0xc0, 0x0b, 0x6e, 0x5e, 0x71, 0x9d, 0xa3, 0xfa, 0x43, 0x00, 0xc9, 0xcd, 0xb5, 0xd2, 0xef,
	0x86, 0xa2, 0x78, 0xcc, 0xfd, 0xb0, 0xeb, 0x24, 0x67, 0x31, 0x8e, 0xc6, 0x28, 0x15, 0x5c, 0x9a,
	0xe1, 0xb4, 0x38, 0xe0, 0x27, 0x68, 0x21, 0xf5, 0x28, 0x3f, 0x84, 0x6d, 0x4b, 0x45, 0x22, 0x95,
	0x96, 0x8a, 0x45, 0xca, 0xb6, 0xbc, 0xdc, 0xab, 0xee, 0xc2, 0x7a, 0x2a, 0x72, 0xc3, 0x65, 0xd0,
	0xb2, 0xcc, 0xc2, 0xed, 0xe8, 0xbf, 0x9b, 0xc8, 0x62, 0x62, 0x7e, 0x26, 0xaf, 0x54, 0x99, 0xc2,
	0x4d, 0x68, 0x0a, 0x5f, 0x62, 0x4d, 0x11, 0x63, 0x77, 0x89, 0x94, 0x90, 0x6f, 0xab, 0xab, 0x95,
	0x7b, 0x6c, 0x4d, 0x86, 0x89, 0x74, 0x38, 0xe2, 0x22, 0x19, 0x19, 0x37, 0x84, 0x00, 0x45, 0x9f,
	0x59, 0x89, 0xbd, 0x8b, 0x92, 0x57, 0x42, 0x8f, 0xbd, 0x4e, 0x31, 0x0e, 0xfa, 0x4e, 0xea, 0xd4,
	0xf6, 0xa0, 0x13, 0x8d, 0x98, 0x90, 0x18, 0x8f, 0x35, 0x1b, 0x8f, 0xb6, 0xdd, 0x9f, 0xc5, 0x84,
	0xc2, 0x46, 0x7e, 0x23, 0xa3, 0x91, 0x56, 0x52, 0x7c, 0xcd, 0x63, 0xdb, 0x96, 0x3a, 0xe1, 0x2d,
	0x19, 0xba, 0xf1, 0x76, 0x12, 0xbd, 0xe3, 0x66, 0x98, 0x63, 0xbb, 0x6e, 0xdb, 0xce, 0x05, 0x85,
	0xe8, 0x12, 0xdb, 0xf2, 0x09, 0xf4, 0x24, 0xaf, 0xe2, 0xd9, 0xb1, 0xd9, 0xbd, 0xeb, 0xb2, 0x5b,
	0x65, 0x26, 0xc4, 0xbc, 0xf8, 0xa0, 0x3d, 0x86, 0x0d, 0x4c, 0xef, 0x94, 0x0f, 0xed, 0x08, 0xb5,
	0x53, 0xa5, 0x1f, 0xf6, 0x0a, 0xd9, 0x33, 0x14, 0xa1, 0xdb, 0x19, 0xe7, 0x7a, 0x28, 0xe2, 0x3c,
	0x00, 0x1b, 0xd9, 0x36, 0xee, 0xcf, 0xe2, 0x9c, 0xfe, 0xb9, 0x01, 0xbd, 0x73, 0x95, 0x24, 0x42,
	0x26, 0x18, 0x5d, 0x6c, 0x36, 0xa9, 0x4a, 0x86, 0x29, 0x9f, 0xf2, 0xd4, 0x37, 0x9b, 0x54, 0x25,
	0xe7, 0xb8, 0x47, 0x1c, 0xfc, 0x98, 0x31, 0x33, 0xf2, 0x9d, 0x21, 0x55, 0xc9, 0x05, 0x33, 0x23,
	0xf2, 0x04, 0xfa, 0xda, 0x51, 0xcf, 0xa1, 0x11, 0x63, 0xee, 0x7a, 0xc4, 0x86, 0x17, 0xbe, 0x14,
	0x63, 0xcb, 0x86, 0xf0, 0x3c, 0x16, 0x6d, 0xcb, 0x7e, 0x5e, 0x4f, 0x55, 0x72, 0x9a, 0x60, 0x17,
	0x83, 0x8a, 0xe7, 0x2c, 0x25, 0x4d, 0x27, 0xff, 0xd8, 0x82, 0x8d, 0xd3, 0x78, 0x2c, 0xe4, 0x25,
	0xd7, 0x53, 0x11, 0x71, 0xf2, 0x1b, 0xe8, 0x5d, 0x1a, 0xa6, 0xcd, 0xe7, 0x42, 0x0a, 0x99, 0x90,
	0xc0, 0x45, 0x6a, 0xae, 0x6c, 0x06, 0xbe, 0xe3, 0xd7, 0x79, 0x2f, 0x3d, 0xf8, 0xd3, 0xbf, 0xfe,
	0xf3, 0xb7, 0xe6, 0x80, 0x7e, 0xef, 0x78, 0xfa, 0x93, 0x63, 0x86, 0xb8, 0xc7, 0x79, 0x85, 0xf6,
	0xf3, 0xc6, 0x47, 0xe4, 0x0d, 0xc0, 0xa5, 0x51, 0x99, 0x83, 0xf7, 0x83, 0x75, 0x96, 0x50, 0x2f,
	0x46, 0xdf, 0xb7, 0xe8, 0xbb, 0x74, 0xa7, 0x8e, 0x5e, 0x62, 0xbd, 0x81, 0x8e, 0xe7, 0xd6, 0xcb,
	0x71, 0xcb, 0x49, 0x3e, 0xc3, 0xc2, 0xe9, 0xc0, 0x62, 0xef, 0x10, 0x52, 0x61, 0x33, 0x8f, 0x16,
	0x61, 0x0d, 0x7b, 0x3a, 0xfd, 0x9e, 0x90, 0xec, 0x95, 0xcf, 0x6a, 0x96, 0x7b, 0x2f, 0x0a, 0x8c,
	0x83, 0x3f, 0x96, 0xfc, 0x1a, 0x03, 0x73, 0x05, 0xfd, 0x5b, 0x7c, 0x9b, 0x3c, 0x70, 0x68, 0x8b,
	0x58, 0xf8, 0xe2, 0xf8, 0x3c, 0xb1, 0x46, 0x1e, 0xd2, 0x60, 0xde, 0xc8, 0xc4, 0x82, 0xa0, 0x1d,
	0x06, 0xfd, 0xb3, 0x31, 0xd2, 0xe0, 0x59, 0x3b, 0x8b, 0xd8, 0xf6, 0x60, 0xd3, 0xc7, 0xcb, 0x91,
	0xc5, 0xf7, 0x98, 0x10, 0x16, 0x15, 0x4d, 0x18, 0xd8, 0x9e, 0x65, 0xda, 0xe4, 0x91, 0x03, 0x5a,
	0x42, 0xc1, 0x07, 0xbe, 0x24, 0xab, 0x2f, 0xf4, 0x47, 0xd6, 0xd6, 0x87, 0x94, 0xce, 0xdb, 0xe2,
	0x33, 0x28, 0x3e, 0x80, 0x75, 0x96, 0x5d, 0x05, 0x70, 0x01, 0xf7, 0xfe, 0xf6, 0x01, 0xb4, 0x20,
	0x68, 0xe7, 0xb7, 0x58, 0xde, 0x95, 0x15, 0x9f, 0xf4, 0xf3, 0x6f, 0x68, 0xe3, 0xb1, 0xb5, 0xf1,
	0x80, 0xee, 0xce, 0xdb, 0xf0, 0x16, 0x7e, 0x07, 0x5b, 0x33, 0x63, 0x93, 0x2c, 0x9f, 0x47, 0x83,
	0xdd, 0xf9, 0x4f, 0xc8, 0x1d, 0xe8, 0x0f, 0xac, 0xa1, 0x47, 0x74, 0xaf, 0x56, 0x2d, 0xb7, 0x51,
	0xd1, 0xd6, 0x6b, 0x68, 0xe1, 0x84, 0x24, 0x1e, 0x65, 0x86, 0xd3, 0x94, 0x05, 0x33, 0x4b, 0x49,
	0xe8, 0x23, 0x0b, 0x1f, 0xd0, 0x7b, 0x35, 0x78, 0x91, 0xc8, 0x63, 0x24, 0x47, 0x08, 0xcc, 0xa1,
	0x7f, 0x8b, 0x9e, 0x94, 0xe9, 0x58, 0x44, 0x5a, 0x16, 0x87, 0x8a, 0x5a, 0x13, 0xfb, 0xf4, 0x7e,
	0x65, 0x62, 0x5a, 0x3f, 0x8c, 0x66, 0xfe, 0xd2, 0x80, 0x87, 0x33, 0x23, 0xfe, 0xb5, 0x30, 0xa3,
	0xda, 0x0f, 0xe3, 0x87, 0xb5, 0x1b, 0xbc, 0x8f, 0x08, 0x0c, 0x0e, 0x57, 0x2b, 0x3a, 0xc7, 0xf6,
	0xac, 0x63, 0xf7, 0xe8, 0xe6, 0xed, 0xbb, 0xa3, 0x3f, 0x7f, 0x45, 0x7f, 0x6e, 0x87, 0x79, 0x99,
	0x3f, 0x2b, 0x98, 0xd1, 0xd2, 0xc4, 0x1e, 0x59, 0xeb, 0x87, 0xf4, 0x49, 0x65, 0xdd, 0x2c, 0xb3,
	0x86, 0x2e, 0x85, 0xd0, 0xc2, 0x96, 0xfb, 0xff, 0x69, 0xb6, 0x38, 0x27, 0xb8, 0x26, 0xbf, 0x86,
	0xfe, 0xa7, 0xdc, 0xd4, 0x98, 0xcd, 0x52, 0xf0, 0xf9, 0x59, 0xeb, 0xa1, 0x49, 0x0d, 0xba, 0x36,
	0x7d, 0xdf, 0x40, 0xc7, 0x33, 0x93, 0xd5, 0x7d, 0x7c, 0x96, 0xc3, 0x2c, 0xea, 0xe3, 0xd2, 0xa3,
	0x7d, 0x01, 0x6d, 0x37, 0x98, 0x09, 0x29, 0xab, 0xb6, 0x1c, 0xd4, 0x83, 0x05, 0xb2, 0x32, 0x0a,
	0x77, 0x2b, 0xb8, 0xb4, 0xf8, 0x5c, 0xb4, 0x1c, 0xf2, 0x29, 0x97, 0x5c, 0x33, 0xc3, 0xeb, 0xc3,
	0x76, 0x55, 0x28, 0x6a, 0x3d, 0xce, 0x15, 0x29, 0xd9, 0xaf, 0xf0, 0x93, 0x39, 0xc4, 0xb7, 0xeb,
	0x96, 0xd6, 0x7d, 0xfc, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x38, 0xd4, 0x9d, 0x64, 0xab, 0x12,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminServiceClient interface {
	// start mining
	StartMining(ctx context.Context, in *PassphraseRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// stop mining
	StopMining(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// Accounts return account list.
	Accounts(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*AccountsResponse, error)
	// NewAccount create a new account with passphrase
	NewAccount(ctx context.Context, in *PassphraseRequest, opts ...grpc.CallOption) (*NewAccountResponse, error)
	// NewAccount create a new account with passphrase
	UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// ImportAccount import a account with private key and passphrase
	ImportAccount(ctx context.Context, in *PrivKeyAndPassphrase, opts ...grpc.CallOption) (*Address, error)
	// ExportPrivateKey export account`s private key with  passphrase
	ExportPrivateKey(ctx context.Context, in *ExportPrivateKeyRequest, opts ...grpc.CallOption) (*PrivateKey, error)
	// UnlockAccount unlock account with passphrase
	UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// LockAccount lock account
	LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// Verify, sign, and send the transaction.
	SendTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionHash, error)
	// Sign sign msg
	Sign(ctx context.Context, in *SignHashRequest, opts ...grpc.CallOption) (*SignHashResponse, error)
	// Sign sign msg
	VerifyMessage(ctx context.Context, in *VerifyMessageRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// Sign sign transaction
	SignTransactionWithPassphrase(ctx context.Context, in *SignTransactionPassphraseRequest, opts ...grpc.CallOption) (*SignTransactionPassphraseResponse, error)
	// SendTransactionWithPassphrase send transaction with passphrase
	SendTransactionWithPassphrase(ctx context.Context, in *SendTransactionPassphraseRequest, opts ...grpc.CallOption) (*TransactionHash, error)
	//return transaction
	Stop(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// Return net version
	GetNetVersion(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NetVersion, error)
	// Return the p2p node info.
	NodeInfo(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
	//return Logging Info
	Logging(ctx context.Context, in *LoggingInfo, opts ...grpc.CallOption) (*LoggingInfo, error)
	//Return the key pair
	GeneratePrivateKey(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*PrivateKey, error)
}

type adminServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminServiceClient(cc *grpc.ClientConn) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) StartMining(ctx context.Context, in *PassphraseRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/StartMining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) StopMining(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/StopMining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) Accounts(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*AccountsResponse, error) {
	out := new(AccountsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/Accounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) NewAccount(ctx context.Context, in *PassphraseRequest, opts ...grpc.CallOption) (*NewAccountResponse, error) {
	out := new(NewAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/NewAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/UpdateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ImportAccount(ctx context.Context, in *PrivKeyAndPassphrase, opts ...grpc.CallOption) (*Address, error) {
	out := new(Address)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/ImportAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ExportPrivateKey(ctx context.Context, in *ExportPrivateKeyRequest, opts ...grpc.CallOption) (*PrivateKey, error) {
	out := new(PrivateKey)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/ExportPrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/UnlockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/LockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SendTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionHash, error) {
	out := new(TransactionHash)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) Sign(ctx context.Context, in *SignHashRequest, opts ...grpc.CallOption) (*SignHashResponse, error) {
	out := new(SignHashResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/Sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) VerifyMessage(ctx context.Context, in *VerifyMessageRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/VerifyMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SignTransactionWithPassphrase(ctx context.Context, in *SignTransactionPassphraseRequest, opts ...grpc.CallOption) (*SignTransactionPassphraseResponse, error) {
	out := new(SignTransactionPassphraseResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/SignTransactionWithPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SendTransactionWithPassphrase(ctx context.Context, in *SendTransactionPassphraseRequest, opts ...grpc.CallOption) (*TransactionHash, error) {
	out := new(TransactionHash)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/SendTransactionWithPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) Stop(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetNetVersion(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NetVersion, error) {
	out := new(NetVersion)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/GetNetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) NodeInfo(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/NodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) Logging(ctx context.Context, in *LoggingInfo, opts ...grpc.CallOption) (*LoggingInfo, error) {
	out := new(LoggingInfo)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/Logging", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GeneratePrivateKey(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*PrivateKey, error) {
	out := new(PrivateKey)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/GeneratePrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
type AdminServiceServer interface {
	// start mining
	StartMining(context.Context, *PassphraseRequest) (*BoolResponse, error)
	// stop mining
	StopMining(context.Context, *NonParamsRequest) (*BoolResponse, error)
	// Accounts return account list.
	Accounts(context.Context, *NonParamsRequest) (*AccountsResponse, error)
	// NewAccount create a new account with passphrase
	NewAccount(context.Context, *PassphraseRequest) (*NewAccountResponse, error)
	// NewAccount create a new account with passphrase
	UpdateAccount(context.Context, *UpdateAccountRequest) (*BoolResponse, error)
	// ImportAccount import a account with private key and passphrase
	ImportAccount(context.Context, *PrivKeyAndPassphrase) (*Address, error)
	// ExportPrivateKey export account`s private key with  passphrase
	ExportPrivateKey(context.Context, *ExportPrivateKeyRequest) (*PrivateKey, error)
	// UnlockAccount unlock account with passphrase
	UnlockAccount(context.Context, *UnlockAccountRequest) (*BoolResponse, error)
	// LockAccount lock account
	LockAccount(context.Context, *LockAccountRequest) (*BoolResponse, error)
	// Verify, sign, and send the transaction.
	SendTransaction(context.Context, *TransactionRequest) (*TransactionHash, error)
	// Sign sign msg
	Sign(context.Context, *SignHashRequest) (*SignHashResponse, error)
	// Sign sign msg
	VerifyMessage(context.Context, *VerifyMessageRequest) (*BoolResponse, error)
	// Sign sign transaction
	SignTransactionWithPassphrase(context.Context, *SignTransactionPassphraseRequest) (*SignTransactionPassphraseResponse, error)
	// SendTransactionWithPassphrase send transaction with passphrase
	SendTransactionWithPassphrase(context.Context, *SendTransactionPassphraseRequest) (*TransactionHash, error)
	//return transaction
	Stop(context.Context, *NonParamsRequest) (*BoolResponse, error)
	// Return net version
	GetNetVersion(context.Context, *NonParamsRequest) (*NetVersion, error)
	// Return the p2p node info.
	NodeInfo(context.Context, *NonParamsRequest) (*NodeInfoResponse, error)
	//return Logging Info
	Logging(context.Context, *LoggingInfo) (*LoggingInfo, error)
	//Return the key pair
	GeneratePrivateKey(context.Context, *NonParamsRequest) (*PrivateKey, error)
}

// UnimplementedAdminServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServiceServer struct {
}

func (*UnimplementedAdminServiceServer) StartMining(ctx context.Context, req *PassphraseRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartMining not implemented")
}
func (*UnimplementedAdminServiceServer) StopMining(ctx context.Context, req *NonParamsRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopMining not implemented")
}
func (*UnimplementedAdminServiceServer) Accounts(ctx context.Context, req *NonParamsRequest) (*AccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Accounts not implemented")
}
func (*UnimplementedAdminServiceServer) NewAccount(ctx context.Context, req *PassphraseRequest) (*NewAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewAccount not implemented")
}
func (*UnimplementedAdminServiceServer) UpdateAccount(ctx context.Context, req *UpdateAccountRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccount not implemented")
}
func (*UnimplementedAdminServiceServer) ImportAccount(ctx context.Context, req *PrivKeyAndPassphrase) (*Address, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportAccount not implemented")
}
func (*UnimplementedAdminServiceServer) ExportPrivateKey(ctx context.Context, req *ExportPrivateKeyRequest) (*PrivateKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportPrivateKey not implemented")
}
func (*UnimplementedAdminServiceServer) UnlockAccount(ctx context.Context, req *UnlockAccountRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockAccount not implemented")
}
func (*UnimplementedAdminServiceServer) LockAccount(ctx context.Context, req *LockAccountRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LockAccount not implemented")
}
func (*UnimplementedAdminServiceServer) SendTransaction(ctx context.Context, req *TransactionRequest) (*TransactionHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedAdminServiceServer) Sign(ctx context.Context, req *SignHashRequest) (*SignHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sign not implemented")
}
func (*UnimplementedAdminServiceServer) VerifyMessage(ctx context.Context, req *VerifyMessageRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyMessage not implemented")
}
func (*UnimplementedAdminServiceServer) SignTransactionWithPassphrase(ctx context.Context, req *SignTransactionPassphraseRequest) (*SignTransactionPassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransactionWithPassphrase not implemented")
}
func (*UnimplementedAdminServiceServer) SendTransactionWithPassphrase(ctx context.Context, req *SendTransactionPassphraseRequest) (*TransactionHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransactionWithPassphrase not implemented")
}
func (*UnimplementedAdminServiceServer) Stop(ctx context.Context, req *NonParamsRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedAdminServiceServer) GetNetVersion(ctx context.Context, req *NonParamsRequest) (*NetVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetVersion not implemented")
}
func (*UnimplementedAdminServiceServer) NodeInfo(ctx context.Context, req *NonParamsRequest) (*NodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeInfo not implemented")
}
func (*UnimplementedAdminServiceServer) Logging(ctx context.Context, req *LoggingInfo) (*LoggingInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logging not implemented")
}
func (*UnimplementedAdminServiceServer) GeneratePrivateKey(ctx context.Context, req *NonParamsRequest) (*PrivateKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneratePrivateKey not implemented")
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_StartMining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).StartMining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/StartMining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).StartMining(ctx, req.(*PassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_StopMining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).StopMining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/StopMining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).StopMining(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_Accounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).Accounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/Accounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).Accounts(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_NewAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).NewAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/NewAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).NewAccount(ctx, req.(*PassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).UpdateAccount(ctx, req.(*UpdateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ImportAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivKeyAndPassphrase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ImportAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/ImportAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ImportAccount(ctx, req.(*PrivKeyAndPassphrase))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ExportPrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportPrivateKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ExportPrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/ExportPrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ExportPrivateKey(ctx, req.(*ExportPrivateKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_UnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).UnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/UnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).UnlockAccount(ctx, req.(*UnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_LockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).LockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/LockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).LockAccount(ctx, req.(*LockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SendTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).Sign(ctx, req.(*SignHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_VerifyMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).VerifyMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/VerifyMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).VerifyMessage(ctx, req.(*VerifyMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SignTransactionWithPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SignTransactionWithPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/SignTransactionWithPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SignTransactionWithPassphrase(ctx, req.(*SignTransactionPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SendTransactionWithPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SendTransactionWithPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/SendTransactionWithPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SendTransactionWithPassphrase(ctx, req.(*SendTransactionPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).Stop(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetNetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetNetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/GetNetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetNetVersion(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_NodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).NodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/NodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).NodeInfo(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_Logging_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoggingInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).Logging(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/Logging",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).Logging(ctx, req.(*LoggingInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GeneratePrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GeneratePrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/GeneratePrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GeneratePrivateKey(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartMining",
			Handler:    _AdminService_StartMining_Handler,
		},
		{
			MethodName: "StopMining",
			Handler:    _AdminService_StopMining_Handler,
		},
		{
			MethodName: "Accounts",
			Handler:    _AdminService_Accounts_Handler,
		},
		{
			MethodName: "NewAccount",
			Handler:    _AdminService_NewAccount_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _AdminService_UpdateAccount_Handler,
		},
		{
			MethodName: "ImportAccount",
			Handler:    _AdminService_ImportAccount_Handler,
		},
		{
			MethodName: "ExportPrivateKey",
			Handler:    _AdminService_ExportPrivateKey_Handler,
		},
		{
			MethodName: "UnlockAccount",
			Handler:    _AdminService_UnlockAccount_Handler,
		},
		{
			MethodName: "LockAccount",
			Handler:    _AdminService_LockAccount_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _AdminService_SendTransaction_Handler,
		},
		{
			MethodName: "Sign",
			Handler:    _AdminService_Sign_Handler,
		},
		{
			MethodName: "VerifyMessage",
			Handler:    _AdminService_VerifyMessage_Handler,
		},
		{
			MethodName: "SignTransactionWithPassphrase",
			Handler:    _AdminService_SignTransactionWithPassphrase_Handler,
		},
		{
			MethodName: "SendTransactionWithPassphrase",
			Handler:    _AdminService_SendTransactionWithPassphrase_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _AdminService_Stop_Handler,
		},
		{
			MethodName: "GetNetVersion",
			Handler:    _AdminService_GetNetVersion_Handler,
		},
		{
			MethodName: "NodeInfo",
			Handler:    _AdminService_NodeInfo_Handler,
		},
		{
			MethodName: "Logging",
			Handler:    _AdminService_Logging_Handler,
		},
		{
			MethodName: "GeneratePrivateKey",
			Handler:    _AdminService_GeneratePrivateKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
