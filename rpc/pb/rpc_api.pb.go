// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc_api.proto

package rpcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Request message of Subscribe rpc
type SubscribeRequest struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{0}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

// Request message of Subscribe rpc
type SubscribeResponse struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{1}
}
func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *SubscribeResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Response message of GetGtState rpc.
type GetChainStateResponse struct {
	// Block chain id
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Current gt tail hash
	Tail string `protobuf:"bytes,2,opt,name=tail,proto3" json:"tail,omitempty"`
	// Current gt fixed hash
	Fixed string `protobuf:"bytes,3,opt,name=fixed,proto3" json:"fixed,omitempty"`
	// Current gt tail block height
	Height uint64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// The current gt protocol version.
	ProtocolVersion string `protobuf:"bytes,5,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	// The peer sync status.
	Synchronized bool `protobuf:"varint,6,opt,name=synchronized,proto3" json:"synchronized,omitempty"`
	// gt version
	Version              string   `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChainStateResponse) Reset()         { *m = GetChainStateResponse{} }
func (m *GetChainStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetChainStateResponse) ProtoMessage()    {}
func (*GetChainStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{2}
}
func (m *GetChainStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChainStateResponse.Unmarshal(m, b)
}
func (m *GetChainStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChainStateResponse.Marshal(b, m, deterministic)
}
func (m *GetChainStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChainStateResponse.Merge(m, src)
}
func (m *GetChainStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetChainStateResponse.Size(m)
}
func (m *GetChainStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChainStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetChainStateResponse proto.InternalMessageInfo

func (m *GetChainStateResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GetChainStateResponse) GetTail() string {
	if m != nil {
		return m.Tail
	}
	return ""
}

func (m *GetChainStateResponse) GetFixed() string {
	if m != nil {
		return m.Fixed
	}
	return ""
}

func (m *GetChainStateResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetChainStateResponse) GetProtocolVersion() string {
	if m != nil {
		return m.ProtocolVersion
	}
	return ""
}

func (m *GetChainStateResponse) GetSynchronized() bool {
	if m != nil {
		return m.Synchronized
	}
	return false
}

func (m *GetChainStateResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Response message of GetAccount rpc.
type AccountInfo struct {
	Address              string        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              string        `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	FrozenFund           string        `protobuf:"bytes,3,opt,name=frozen_fund,json=frozenFund,proto3" json:"frozen_fund,omitempty"`
	PledgeFund           string        `protobuf:"bytes,4,opt,name=pledge_fund,json=pledgeFund,proto3" json:"pledge_fund,omitempty"`
	Nonce                uint64        `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	VariablesHash        string        `protobuf:"bytes,6,opt,name=variables_hash,json=variablesHash,proto3" json:"variables_hash,omitempty"`
	CreditIndex          string        `protobuf:"bytes,7,opt,name=credit_index,json=creditIndex,proto3" json:"credit_index,omitempty"`
	Permissions          []*Permission `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions,omitempty"`
	State                int32         `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AccountInfo) Reset()         { *m = AccountInfo{} }
func (m *AccountInfo) String() string { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()    {}
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{3}
}
func (m *AccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountInfo.Unmarshal(m, b)
}
func (m *AccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountInfo.Marshal(b, m, deterministic)
}
func (m *AccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountInfo.Merge(m, src)
}
func (m *AccountInfo) XXX_Size() int {
	return xxx_messageInfo_AccountInfo.Size(m)
}
func (m *AccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AccountInfo proto.InternalMessageInfo

func (m *AccountInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AccountInfo) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *AccountInfo) GetFrozenFund() string {
	if m != nil {
		return m.FrozenFund
	}
	return ""
}

func (m *AccountInfo) GetPledgeFund() string {
	if m != nil {
		return m.PledgeFund
	}
	return ""
}

func (m *AccountInfo) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *AccountInfo) GetVariablesHash() string {
	if m != nil {
		return m.VariablesHash
	}
	return ""
}

func (m *AccountInfo) GetCreditIndex() string {
	if m != nil {
		return m.CreditIndex
	}
	return ""
}

func (m *AccountInfo) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *AccountInfo) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

type Permission struct {
	AuthCategory         string   `protobuf:"bytes,1,opt,name=auth_category,json=authCategory,proto3" json:"auth_category,omitempty"`
	AuthMessage          []string `protobuf:"bytes,2,rep,name=auth_message,json=authMessage,proto3" json:"auth_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{4}
}
func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetAuthCategory() string {
	if m != nil {
		return m.AuthCategory
	}
	return ""
}

func (m *Permission) GetAuthMessage() []string {
	if m != nil {
		return m.AuthMessage
	}
	return nil
}

// Response message of Call rpc.
type CallResponse struct {
	// result of smart contract method call.
	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	//execute error
	ExecuteErr string `protobuf:"bytes,2,opt,name=execute_err,json=executeErr,proto3" json:"execute_err,omitempty"`
	//estimate gas used
	EstimateGas          string   `protobuf:"bytes,3,opt,name=estimate_gas,json=estimateGas,proto3" json:"estimate_gas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallResponse) Reset()         { *m = CallResponse{} }
func (m *CallResponse) String() string { return proto.CompactTextString(m) }
func (*CallResponse) ProtoMessage()    {}
func (*CallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{5}
}
func (m *CallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResponse.Unmarshal(m, b)
}
func (m *CallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResponse.Marshal(b, m, deterministic)
}
func (m *CallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResponse.Merge(m, src)
}
func (m *CallResponse) XXX_Size() int {
	return xxx_messageInfo_CallResponse.Size(m)
}
func (m *CallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CallResponse proto.InternalMessageInfo

func (m *CallResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *CallResponse) GetExecuteErr() string {
	if m != nil {
		return m.ExecuteErr
	}
	return ""
}

func (m *CallResponse) GetEstimateGas() string {
	if m != nil {
		return m.EstimateGas
	}
	return ""
}

// Response message of EstimateGas rpc.
type GasResponse struct {
	Gas                  string   `protobuf:"bytes,1,opt,name=gas,proto3" json:"gas,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasResponse) Reset()         { *m = GasResponse{} }
func (m *GasResponse) String() string { return proto.CompactTextString(m) }
func (*GasResponse) ProtoMessage()    {}
func (*GasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{6}
}
func (m *GasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasResponse.Unmarshal(m, b)
}
func (m *GasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasResponse.Marshal(b, m, deterministic)
}
func (m *GasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasResponse.Merge(m, src)
}
func (m *GasResponse) XXX_Size() int {
	return xxx_messageInfo_GasResponse.Size(m)
}
func (m *GasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GasResponse proto.InternalMessageInfo

func (m *GasResponse) GetGas() string {
	if m != nil {
		return m.Gas
	}
	return ""
}

func (m *GasResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// Request message of SendRawTransactionRequest rpc.
type SendRawTransactionRequest struct {
	// Signed data of transaction
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRawTransactionRequest) Reset()         { *m = SendRawTransactionRequest{} }
func (m *SendRawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendRawTransactionRequest) ProtoMessage()    {}
func (*SendRawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{7}
}
func (m *SendRawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRawTransactionRequest.Unmarshal(m, b)
}
func (m *SendRawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRawTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SendRawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRawTransactionRequest.Merge(m, src)
}
func (m *SendRawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendRawTransactionRequest.Size(m)
}
func (m *SendRawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRawTransactionRequest proto.InternalMessageInfo

func (m *SendRawTransactionRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type BlockHashAndFull struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	FullFillTransaction  bool     `protobuf:"varint,2,opt,name=full_fill_transaction,json=fullFillTransaction,proto3" json:"full_fill_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHashAndFull) Reset()         { *m = BlockHashAndFull{} }
func (m *BlockHashAndFull) String() string { return proto.CompactTextString(m) }
func (*BlockHashAndFull) ProtoMessage()    {}
func (*BlockHashAndFull) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{8}
}
func (m *BlockHashAndFull) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHashAndFull.Unmarshal(m, b)
}
func (m *BlockHashAndFull) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHashAndFull.Marshal(b, m, deterministic)
}
func (m *BlockHashAndFull) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHashAndFull.Merge(m, src)
}
func (m *BlockHashAndFull) XXX_Size() int {
	return xxx_messageInfo_BlockHashAndFull.Size(m)
}
func (m *BlockHashAndFull) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHashAndFull.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHashAndFull proto.InternalMessageInfo

func (m *BlockHashAndFull) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BlockHashAndFull) GetFullFillTransaction() bool {
	if m != nil {
		return m.FullFillTransaction
	}
	return false
}

// Response message of TransactionReceipt.
type TransactionReceipt struct {
	//hex tx hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	//id of the chain
	ChainId uint32 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	//The height of the block where the tx is
	BlockHeight uint64 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	//Base58 string of the sender account addresss.
	From string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	//Base58 string of the receiver account addresss.
	To string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	//Amount of value sending with this transaction.
	Value string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	//Transaction nonce.
	Nonce uint64 `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	//timestamp
	Timestamp int64 `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//tx tpye
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	//hex data
	Data string `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	//transaction memo
	Memo string `protobuf:"bytes,11,opt,name=memo,proto3" json:"memo,omitempty"`
	//tx priority
	Priority uint32 `protobuf:"varint,12,opt,name=priority,proto3" json:"priority,omitempty"`
	//gas limit
	GasLimit string `protobuf:"bytes,13,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	//tx status {1:SUCCESS、0：FAILED,2 PENDING}
	Status uint32 `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	// transaction gas used
	GasUsed string `protobuf:"bytes,15,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	//contract execute error
	ExecuteError string `protobuf:"bytes,16,opt,name=execute_error,json=executeError,proto3" json:"execute_error,omitempty"`
	// contract execute result
	ExecuteResult string `protobuf:"bytes,17,opt,name=execute_result,json=executeResult,proto3" json:"execute_result,omitempty"`
	//The contract address created, if the transaction was a contract creation, otherwise null.
	ContractAddress string `protobuf:"bytes,18,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	//election result, if the transaction was a pledge transaction, otherwise null.
	ElectionResult       string   `protobuf:"bytes,19,opt,name=election_result,json=electionResult,proto3" json:"election_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionReceipt) Reset()         { *m = TransactionReceipt{} }
func (m *TransactionReceipt) String() string { return proto.CompactTextString(m) }
func (*TransactionReceipt) ProtoMessage()    {}
func (*TransactionReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{9}
}
func (m *TransactionReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionReceipt.Unmarshal(m, b)
}
func (m *TransactionReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionReceipt.Marshal(b, m, deterministic)
}
func (m *TransactionReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionReceipt.Merge(m, src)
}
func (m *TransactionReceipt) XXX_Size() int {
	return xxx_messageInfo_TransactionReceipt.Size(m)
}
func (m *TransactionReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionReceipt proto.InternalMessageInfo

func (m *TransactionReceipt) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TransactionReceipt) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *TransactionReceipt) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *TransactionReceipt) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransactionReceipt) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransactionReceipt) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TransactionReceipt) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactionReceipt) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TransactionReceipt) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TransactionReceipt) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *TransactionReceipt) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *TransactionReceipt) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *TransactionReceipt) GetGasLimit() string {
	if m != nil {
		return m.GasLimit
	}
	return ""
}

func (m *TransactionReceipt) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TransactionReceipt) GetGasUsed() string {
	if m != nil {
		return m.GasUsed
	}
	return ""
}

func (m *TransactionReceipt) GetExecuteError() string {
	if m != nil {
		return m.ExecuteError
	}
	return ""
}

func (m *TransactionReceipt) GetExecuteResult() string {
	if m != nil {
		return m.ExecuteResult
	}
	return ""
}

func (m *TransactionReceipt) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *TransactionReceipt) GetElectionResult() string {
	if m != nil {
		return m.ElectionResult
	}
	return ""
}

// Request message of GetBestBlockByHeight rpc.
type BlockHeightAndFull struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	FullFillTransaction  bool     `protobuf:"varint,2,opt,name=full_fill_transaction,json=fullFillTransaction,proto3" json:"full_fill_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeightAndFull) Reset()         { *m = BlockHeightAndFull{} }
func (m *BlockHeightAndFull) String() string { return proto.CompactTextString(m) }
func (*BlockHeightAndFull) ProtoMessage()    {}
func (*BlockHeightAndFull) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{10}
}
func (m *BlockHeightAndFull) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeightAndFull.Unmarshal(m, b)
}
func (m *BlockHeightAndFull) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeightAndFull.Marshal(b, m, deterministic)
}
func (m *BlockHeightAndFull) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeightAndFull.Merge(m, src)
}
func (m *BlockHeightAndFull) XXX_Size() int {
	return xxx_messageInfo_BlockHeightAndFull.Size(m)
}
func (m *BlockHeightAndFull) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeightAndFull.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeightAndFull proto.InternalMessageInfo

func (m *BlockHeightAndFull) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockHeightAndFull) GetFullFillTransaction() bool {
	if m != nil {
		return m.FullFillTransaction
	}
	return false
}

// Request message of GetTransactionByContractAddress rpc.
type ContractAddressRequest struct {
	ContractAddress      string   `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractAddressRequest) Reset()         { *m = ContractAddressRequest{} }
func (m *ContractAddressRequest) String() string { return proto.CompactTextString(m) }
func (*ContractAddressRequest) ProtoMessage()    {}
func (*ContractAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{11}
}
func (m *ContractAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractAddressRequest.Unmarshal(m, b)
}
func (m *ContractAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractAddressRequest.Marshal(b, m, deterministic)
}
func (m *ContractAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractAddressRequest.Merge(m, src)
}
func (m *ContractAddressRequest) XXX_Size() int {
	return xxx_messageInfo_ContractAddressRequest.Size(m)
}
func (m *ContractAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContractAddressRequest proto.InternalMessageInfo

func (m *ContractAddressRequest) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

// Response message of GetBestBlockHash rpc.
type BlockHash struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHash) Reset()         { *m = BlockHash{} }
func (m *BlockHash) String() string { return proto.CompactTextString(m) }
func (*BlockHash) ProtoMessage()    {}
func (*BlockHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{12}
}
func (m *BlockHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHash.Unmarshal(m, b)
}
func (m *BlockHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHash.Marshal(b, m, deterministic)
}
func (m *BlockHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHash.Merge(m, src)
}
func (m *BlockHash) XXX_Size() int {
	return xxx_messageInfo_BlockHash.Size(m)
}
func (m *BlockHash) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHash.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHash proto.InternalMessageInfo

func (m *BlockHash) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// Response message of GetMaxHeight rpc.
type BlockHeight struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeight) Reset()         { *m = BlockHeight{} }
func (m *BlockHeight) String() string { return proto.CompactTextString(m) }
func (*BlockHeight) ProtoMessage()    {}
func (*BlockHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{13}
}
func (m *BlockHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeight.Unmarshal(m, b)
}
func (m *BlockHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeight.Marshal(b, m, deterministic)
}
func (m *BlockHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeight.Merge(m, src)
}
func (m *BlockHeight) XXX_Size() int {
	return xxx_messageInfo_BlockHeight.Size(m)
}
func (m *BlockHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeight.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeight proto.InternalMessageInfo

func (m *BlockHeight) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

// Response message of GetAsset rpc.
type AssetResponse struct {
	Balance              string   `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	FrozenFund           string   `protobuf:"bytes,2,opt,name=frozen_fund,json=frozenFund,proto3" json:"frozen_fund,omitempty"`
	PledgeFund           string   `protobuf:"bytes,3,opt,name=pledge_fund,json=pledgeFund,proto3" json:"pledge_fund,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetResponse) Reset()         { *m = AssetResponse{} }
func (m *AssetResponse) String() string { return proto.CompactTextString(m) }
func (*AssetResponse) ProtoMessage()    {}
func (*AssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{14}
}
func (m *AssetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetResponse.Unmarshal(m, b)
}
func (m *AssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetResponse.Marshal(b, m, deterministic)
}
func (m *AssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetResponse.Merge(m, src)
}
func (m *AssetResponse) XXX_Size() int {
	return xxx_messageInfo_AssetResponse.Size(m)
}
func (m *AssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssetResponse proto.InternalMessageInfo

func (m *AssetResponse) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *AssetResponse) GetFrozenFund() string {
	if m != nil {
		return m.FrozenFund
	}
	return ""
}

func (m *AssetResponse) GetPledgeFund() string {
	if m != nil {
		return m.PledgeFund
	}
	return ""
}

// Response message of GetActiveCount rpc.
type ActiveCountResponse struct {
	ActiveCount          uint32   `protobuf:"varint,1,opt,name=active_count,json=activeCount,proto3" json:"active_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActiveCountResponse) Reset()         { *m = ActiveCountResponse{} }
func (m *ActiveCountResponse) String() string { return proto.CompactTextString(m) }
func (*ActiveCountResponse) ProtoMessage()    {}
func (*ActiveCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{15}
}
func (m *ActiveCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveCountResponse.Unmarshal(m, b)
}
func (m *ActiveCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveCountResponse.Marshal(b, m, deterministic)
}
func (m *ActiveCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveCountResponse.Merge(m, src)
}
func (m *ActiveCountResponse) XXX_Size() int {
	return xxx_messageInfo_ActiveCountResponse.Size(m)
}
func (m *ActiveCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveCountResponse proto.InternalMessageInfo

func (m *ActiveCountResponse) GetActiveCount() uint32 {
	if m != nil {
		return m.ActiveCount
	}
	return 0
}

// Response message of GetPendingTransactionsSize rpc.
type PendingTransactionsSize struct {
	Size_                uint64   `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingTransactionsSize) Reset()         { *m = PendingTransactionsSize{} }
func (m *PendingTransactionsSize) String() string { return proto.CompactTextString(m) }
func (*PendingTransactionsSize) ProtoMessage()    {}
func (*PendingTransactionsSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{16}
}
func (m *PendingTransactionsSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingTransactionsSize.Unmarshal(m, b)
}
func (m *PendingTransactionsSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingTransactionsSize.Marshal(b, m, deterministic)
}
func (m *PendingTransactionsSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingTransactionsSize.Merge(m, src)
}
func (m *PendingTransactionsSize) XXX_Size() int {
	return xxx_messageInfo_PendingTransactionsSize.Size(m)
}
func (m *PendingTransactionsSize) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingTransactionsSize.DiscardUnknown(m)
}

var xxx_messageInfo_PendingTransactionsSize proto.InternalMessageInfo

func (m *PendingTransactionsSize) GetSize_() uint64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

// Response message of GetPendingTransactions rpc.
type PendingTransaction struct {
	Txs                  []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PendingTransaction) Reset()         { *m = PendingTransaction{} }
func (m *PendingTransaction) String() string { return proto.CompactTextString(m) }
func (*PendingTransaction) ProtoMessage()    {}
func (*PendingTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{17}
}
func (m *PendingTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingTransaction.Unmarshal(m, b)
}
func (m *PendingTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingTransaction.Marshal(b, m, deterministic)
}
func (m *PendingTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingTransaction.Merge(m, src)
}
func (m *PendingTransaction) XXX_Size() int {
	return xxx_messageInfo_PendingTransaction.Size(m)
}
func (m *PendingTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_PendingTransaction proto.InternalMessageInfo

func (m *PendingTransaction) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

type Transaction struct {
	//hex tx hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	//id of the chain
	ChainId uint32 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	//Base58 string of the sender account addresss.
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	//Base58 string of the receiver account addresss.
	To string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	//Amount of value sending with this transaction.
	Value string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	//Transaction nonce.
	Nonce uint64 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	//tx tpye
	Type string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	//hex data
	Data string `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	//tx priority
	Priority uint32 `protobuf:"varint,9,opt,name=priority,proto3" json:"priority,omitempty"`
	//transaction memo
	Memo string `protobuf:"bytes,10,opt,name=memo,proto3" json:"memo,omitempty"`
	//gas limit
	GasLimit string `protobuf:"bytes,11,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	//timestamp
	Timestamp int64 `protobuf:"varint,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//signature of the from address
	Signature            string   `protobuf:"bytes,13,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{18}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Transaction) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *Transaction) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Transaction) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Transaction) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Transaction) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Transaction) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Transaction) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Transaction) GetGasLimit() string {
	if m != nil {
		return m.GasLimit
	}
	return ""
}

func (m *Transaction) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Transaction) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type GetContractAuthorizationRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Contract             string   `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractAuthorizationRequest) Reset()         { *m = GetContractAuthorizationRequest{} }
func (m *GetContractAuthorizationRequest) String() string { return proto.CompactTextString(m) }
func (*GetContractAuthorizationRequest) ProtoMessage()    {}
func (*GetContractAuthorizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{19}
}
func (m *GetContractAuthorizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractAuthorizationRequest.Unmarshal(m, b)
}
func (m *GetContractAuthorizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractAuthorizationRequest.Marshal(b, m, deterministic)
}
func (m *GetContractAuthorizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractAuthorizationRequest.Merge(m, src)
}
func (m *GetContractAuthorizationRequest) XXX_Size() int {
	return xxx_messageInfo_GetContractAuthorizationRequest.Size(m)
}
func (m *GetContractAuthorizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractAuthorizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractAuthorizationRequest proto.InternalMessageInfo

func (m *GetContractAuthorizationRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetContractAuthorizationRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

type GetContractAuthorizationResponse struct {
	Authorizations       []*Authorization `protobuf:"bytes,1,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetContractAuthorizationResponse) Reset()         { *m = GetContractAuthorizationResponse{} }
func (m *GetContractAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractAuthorizationResponse) ProtoMessage()    {}
func (*GetContractAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{20}
}
func (m *GetContractAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractAuthorizationResponse.Unmarshal(m, b)
}
func (m *GetContractAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractAuthorizationResponse.Marshal(b, m, deterministic)
}
func (m *GetContractAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractAuthorizationResponse.Merge(m, src)
}
func (m *GetContractAuthorizationResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractAuthorizationResponse.Size(m)
}
func (m *GetContractAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractAuthorizationResponse proto.InternalMessageInfo

func (m *GetContractAuthorizationResponse) GetAuthorizations() []*Authorization {
	if m != nil {
		return m.Authorizations
	}
	return nil
}

type Authorization struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Function             string   `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	Rule                 string   `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authorization) Reset()         { *m = Authorization{} }
func (m *Authorization) String() string { return proto.CompactTextString(m) }
func (*Authorization) ProtoMessage()    {}
func (*Authorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{21}
}
func (m *Authorization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authorization.Unmarshal(m, b)
}
func (m *Authorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authorization.Marshal(b, m, deterministic)
}
func (m *Authorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authorization.Merge(m, src)
}
func (m *Authorization) XXX_Size() int {
	return xxx_messageInfo_Authorization.Size(m)
}
func (m *Authorization) XXX_DiscardUnknown() {
	xxx_messageInfo_Authorization.DiscardUnknown(m)
}

var xxx_messageInfo_Authorization proto.InternalMessageInfo

func (m *Authorization) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Authorization) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *Authorization) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

type GetContractFunctionsRequest struct {
	Contract             string   `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractFunctionsRequest) Reset()         { *m = GetContractFunctionsRequest{} }
func (m *GetContractFunctionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetContractFunctionsRequest) ProtoMessage()    {}
func (*GetContractFunctionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{22}
}
func (m *GetContractFunctionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractFunctionsRequest.Unmarshal(m, b)
}
func (m *GetContractFunctionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractFunctionsRequest.Marshal(b, m, deterministic)
}
func (m *GetContractFunctionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractFunctionsRequest.Merge(m, src)
}
func (m *GetContractFunctionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetContractFunctionsRequest.Size(m)
}
func (m *GetContractFunctionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractFunctionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractFunctionsRequest proto.InternalMessageInfo

func (m *GetContractFunctionsRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

type GetContractFunctionsResponse struct {
	Functions            []string `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractFunctionsResponse) Reset()         { *m = GetContractFunctionsResponse{} }
func (m *GetContractFunctionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractFunctionsResponse) ProtoMessage()    {}
func (*GetContractFunctionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{23}
}
func (m *GetContractFunctionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractFunctionsResponse.Unmarshal(m, b)
}
func (m *GetContractFunctionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractFunctionsResponse.Marshal(b, m, deterministic)
}
func (m *GetContractFunctionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractFunctionsResponse.Merge(m, src)
}
func (m *GetContractFunctionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractFunctionsResponse.Size(m)
}
func (m *GetContractFunctionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractFunctionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractFunctionsResponse proto.InternalMessageInfo

func (m *GetContractFunctionsResponse) GetFunctions() []string {
	if m != nil {
		return m.Functions
	}
	return nil
}

type GetAccountContractsRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountContractsRequest) Reset()         { *m = GetAccountContractsRequest{} }
func (m *GetAccountContractsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountContractsRequest) ProtoMessage()    {}
func (*GetAccountContractsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{24}
}
func (m *GetAccountContractsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountContractsRequest.Unmarshal(m, b)
}
func (m *GetAccountContractsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountContractsRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountContractsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountContractsRequest.Merge(m, src)
}
func (m *GetAccountContractsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountContractsRequest.Size(m)
}
func (m *GetAccountContractsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountContractsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountContractsRequest proto.InternalMessageInfo

func (m *GetAccountContractsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetAccountContractsResponse struct {
	Contracts            []string `protobuf:"bytes,1,rep,name=contracts,proto3" json:"contracts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountContractsResponse) Reset()         { *m = GetAccountContractsResponse{} }
func (m *GetAccountContractsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountContractsResponse) ProtoMessage()    {}
func (*GetAccountContractsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{25}
}
func (m *GetAccountContractsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountContractsResponse.Unmarshal(m, b)
}
func (m *GetAccountContractsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountContractsResponse.Marshal(b, m, deterministic)
}
func (m *GetAccountContractsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountContractsResponse.Merge(m, src)
}
func (m *GetAccountContractsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountContractsResponse.Size(m)
}
func (m *GetAccountContractsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountContractsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountContractsResponse proto.InternalMessageInfo

func (m *GetAccountContractsResponse) GetContracts() []string {
	if m != nil {
		return m.Contracts
	}
	return nil
}

// Request message of GetBestBlockByHeight rpc.
type GetTransactionsRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Index                uint64   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Count                uint64   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	FullFillTransaction  bool     `protobuf:"varint,4,opt,name=full_fill_transaction,json=fullFillTransaction,proto3" json:"full_fill_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionsRequest) Reset()         { *m = GetTransactionsRequest{} }
func (m *GetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsRequest) ProtoMessage()    {}
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{26}
}
func (m *GetTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsRequest.Unmarshal(m, b)
}
func (m *GetTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsRequest.Merge(m, src)
}
func (m *GetTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsRequest.Size(m)
}
func (m *GetTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsRequest proto.InternalMessageInfo

func (m *GetTransactionsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetTransactionsRequest) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *GetTransactionsRequest) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetTransactionsRequest) GetFullFillTransaction() bool {
	if m != nil {
		return m.FullFillTransaction
	}
	return false
}

type GetTransactionsResponse struct {
	Address              string                `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Txs                  []*TransactionReceipt `protobuf:"bytes,11,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetTransactionsResponse) Reset()         { *m = GetTransactionsResponse{} }
func (m *GetTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsResponse) ProtoMessage()    {}
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{27}
}
func (m *GetTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsResponse.Unmarshal(m, b)
}
func (m *GetTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsResponse.Merge(m, src)
}
func (m *GetTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsResponse.Size(m)
}
func (m *GetTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsResponse proto.InternalMessageInfo

func (m *GetTransactionsResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetTransactionsResponse) GetTxs() []*TransactionReceipt {
	if m != nil {
		return m.Txs
	}
	return nil
}

type BlockListResponse struct {
	Blocks               []*BlockResponse `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BlockListResponse) Reset()         { *m = BlockListResponse{} }
func (m *BlockListResponse) String() string { return proto.CompactTextString(m) }
func (*BlockListResponse) ProtoMessage()    {}
func (*BlockListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{28}
}
func (m *BlockListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockListResponse.Unmarshal(m, b)
}
func (m *BlockListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockListResponse.Marshal(b, m, deterministic)
}
func (m *BlockListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockListResponse.Merge(m, src)
}
func (m *BlockListResponse) XXX_Size() int {
	return xxx_messageInfo_BlockListResponse.Size(m)
}
func (m *BlockListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockListResponse proto.InternalMessageInfo

func (m *BlockListResponse) GetBlocks() []*BlockResponse {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type BlockResponse struct {
	ChainId              uint32                `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Hash                 string                `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	BestBlock            bool                  `protobuf:"varint,3,opt,name=best_block,json=bestBlock,proto3" json:"best_block,omitempty"`
	Coinbase             string                `protobuf:"bytes,4,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	StateRoot            string                `protobuf:"bytes,5,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	TxsRoot              string                `protobuf:"bytes,6,opt,name=txs_root,json=txsRoot,proto3" json:"txs_root,omitempty"`
	ParentHash           string                `protobuf:"bytes,7,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Height               uint64                `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp            int64                 `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Memo                 *BlockMemo            `protobuf:"bytes,10,opt,name=memo,proto3" json:"memo,omitempty"`
	Txs                  []*TransactionReceipt `protobuf:"bytes,11,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{29}
}
func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponse.Unmarshal(m, b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponse.Marshal(b, m, deterministic)
}
func (m *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(m, src)
}
func (m *BlockResponse) XXX_Size() int {
	return xxx_messageInfo_BlockResponse.Size(m)
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

func (m *BlockResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *BlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BlockResponse) GetBestBlock() bool {
	if m != nil {
		return m.BestBlock
	}
	return false
}

func (m *BlockResponse) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *BlockResponse) GetStateRoot() string {
	if m != nil {
		return m.StateRoot
	}
	return ""
}

func (m *BlockResponse) GetTxsRoot() string {
	if m != nil {
		return m.TxsRoot
	}
	return ""
}

func (m *BlockResponse) GetParentHash() string {
	if m != nil {
		return m.ParentHash
	}
	return ""
}

func (m *BlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockResponse) GetMemo() *BlockMemo {
	if m != nil {
		return m.Memo
	}
	return nil
}

func (m *BlockResponse) GetTxs() []*TransactionReceipt {
	if m != nil {
		return m.Txs
	}
	return nil
}

type BlockMemo struct {
	Rewards              []*BlockFundEntity `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	Pledge               []*BlockFundEntity `protobuf:"bytes,2,rep,name=pledge,proto3" json:"pledge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BlockMemo) Reset()         { *m = BlockMemo{} }
func (m *BlockMemo) String() string { return proto.CompactTextString(m) }
func (*BlockMemo) ProtoMessage()    {}
func (*BlockMemo) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{30}
}
func (m *BlockMemo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMemo.Unmarshal(m, b)
}
func (m *BlockMemo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMemo.Marshal(b, m, deterministic)
}
func (m *BlockMemo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMemo.Merge(m, src)
}
func (m *BlockMemo) XXX_Size() int {
	return xxx_messageInfo_BlockMemo.Size(m)
}
func (m *BlockMemo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMemo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMemo proto.InternalMessageInfo

func (m *BlockMemo) GetRewards() []*BlockFundEntity {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *BlockMemo) GetPledge() []*BlockFundEntity {
	if m != nil {
		return m.Pledge
	}
	return nil
}

type BlockFundEntity struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	FrozenFund           string   `protobuf:"bytes,3,opt,name=frozen_fund,json=frozenFund,proto3" json:"frozen_fund,omitempty"`
	PledgeFund           string   `protobuf:"bytes,4,opt,name=pledge_fund,json=pledgeFund,proto3" json:"pledge_fund,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockFundEntity) Reset()         { *m = BlockFundEntity{} }
func (m *BlockFundEntity) String() string { return proto.CompactTextString(m) }
func (*BlockFundEntity) ProtoMessage()    {}
func (*BlockFundEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{31}
}
func (m *BlockFundEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockFundEntity.Unmarshal(m, b)
}
func (m *BlockFundEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockFundEntity.Marshal(b, m, deterministic)
}
func (m *BlockFundEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockFundEntity.Merge(m, src)
}
func (m *BlockFundEntity) XXX_Size() int {
	return xxx_messageInfo_BlockFundEntity.Size(m)
}
func (m *BlockFundEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockFundEntity.DiscardUnknown(m)
}

var xxx_messageInfo_BlockFundEntity proto.InternalMessageInfo

func (m *BlockFundEntity) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BlockFundEntity) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *BlockFundEntity) GetFrozenFund() string {
	if m != nil {
		return m.FrozenFund
	}
	return ""
}

func (m *BlockFundEntity) GetPledgeFund() string {
	if m != nil {
		return m.PledgeFund
	}
	return ""
}

type CreditIndexResponse struct {
	CreditIndex          string   `protobuf:"bytes,1,opt,name=credit_index,json=creditIndex,proto3" json:"credit_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditIndexResponse) Reset()         { *m = CreditIndexResponse{} }
func (m *CreditIndexResponse) String() string { return proto.CompactTextString(m) }
func (*CreditIndexResponse) ProtoMessage()    {}
func (*CreditIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60065d63359679fe, []int{32}
}
func (m *CreditIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditIndexResponse.Unmarshal(m, b)
}
func (m *CreditIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditIndexResponse.Marshal(b, m, deterministic)
}
func (m *CreditIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditIndexResponse.Merge(m, src)
}
func (m *CreditIndexResponse) XXX_Size() int {
	return xxx_messageInfo_CreditIndexResponse.Size(m)
}
func (m *CreditIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreditIndexResponse proto.InternalMessageInfo

func (m *CreditIndexResponse) GetCreditIndex() string {
	if m != nil {
		return m.CreditIndex
	}
	return ""
}

func init() {
	proto.RegisterType((*SubscribeRequest)(nil), "rpcpb.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "rpcpb.SubscribeResponse")
	proto.RegisterType((*GetChainStateResponse)(nil), "rpcpb.GetChainStateResponse")
	proto.RegisterType((*AccountInfo)(nil), "rpcpb.AccountInfo")
	proto.RegisterType((*Permission)(nil), "rpcpb.Permission")
	proto.RegisterType((*CallResponse)(nil), "rpcpb.CallResponse")
	proto.RegisterType((*GasResponse)(nil), "rpcpb.GasResponse")
	proto.RegisterType((*SendRawTransactionRequest)(nil), "rpcpb.SendRawTransactionRequest")
	proto.RegisterType((*BlockHashAndFull)(nil), "rpcpb.BlockHashAndFull")
	proto.RegisterType((*TransactionReceipt)(nil), "rpcpb.TransactionReceipt")
	proto.RegisterType((*BlockHeightAndFull)(nil), "rpcpb.BlockHeightAndFull")
	proto.RegisterType((*ContractAddressRequest)(nil), "rpcpb.ContractAddressRequest")
	proto.RegisterType((*BlockHash)(nil), "rpcpb.BlockHash")
	proto.RegisterType((*BlockHeight)(nil), "rpcpb.BlockHeight")
	proto.RegisterType((*AssetResponse)(nil), "rpcpb.AssetResponse")
	proto.RegisterType((*ActiveCountResponse)(nil), "rpcpb.ActiveCountResponse")
	proto.RegisterType((*PendingTransactionsSize)(nil), "rpcpb.PendingTransactionsSize")
	proto.RegisterType((*PendingTransaction)(nil), "rpcpb.PendingTransaction")
	proto.RegisterType((*Transaction)(nil), "rpcpb.Transaction")
	proto.RegisterType((*GetContractAuthorizationRequest)(nil), "rpcpb.GetContractAuthorizationRequest")
	proto.RegisterType((*GetContractAuthorizationResponse)(nil), "rpcpb.GetContractAuthorizationResponse")
	proto.RegisterType((*Authorization)(nil), "rpcpb.Authorization")
	proto.RegisterType((*GetContractFunctionsRequest)(nil), "rpcpb.GetContractFunctionsRequest")
	proto.RegisterType((*GetContractFunctionsResponse)(nil), "rpcpb.GetContractFunctionsResponse")
	proto.RegisterType((*GetAccountContractsRequest)(nil), "rpcpb.GetAccountContractsRequest")
	proto.RegisterType((*GetAccountContractsResponse)(nil), "rpcpb.GetAccountContractsResponse")
	proto.RegisterType((*GetTransactionsRequest)(nil), "rpcpb.GetTransactionsRequest")
	proto.RegisterType((*GetTransactionsResponse)(nil), "rpcpb.GetTransactionsResponse")
	proto.RegisterType((*BlockListResponse)(nil), "rpcpb.BlockListResponse")
	proto.RegisterType((*BlockResponse)(nil), "rpcpb.BlockResponse")
	proto.RegisterType((*BlockMemo)(nil), "rpcpb.BlockMemo")
	proto.RegisterType((*BlockFundEntity)(nil), "rpcpb.BlockFundEntity")
	proto.RegisterType((*CreditIndexResponse)(nil), "rpcpb.CreditIndexResponse")
}

func init() { proto.RegisterFile("rpc_api.proto", fileDescriptor_60065d63359679fe) }

var fileDescriptor_60065d63359679fe = []byte{
	// 2088 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcd, 0x72, 0x1c, 0xb7,
	0xf1, 0xaf, 0x59, 0x7e, 0xed, 0xf6, 0x72, 0xf9, 0x01, 0x52, 0xe4, 0x70, 0x45, 0x49, 0x2b, 0x58,
	0x32, 0x69, 0xd9, 0x16, 0x6d, 0xba, 0xea, 0x5f, 0xff, 0x28, 0xce, 0x81, 0x62, 0x49, 0xb4, 0x52,
	0x56, 0x4a, 0x59, 0x3a, 0x49, 0x55, 0xca, 0xc9, 0x0a, 0x3b, 0x0b, 0x2e, 0x27, 0x9e, 0x9d, 0x59,
	0x0f, 0xb0, 0x14, 0xc9, 0x5b, 0x52, 0xa9, 0x4a, 0x6e, 0xa9, 0x4a, 0x2e, 0x39, 0xe4, 0x19, 0xf2,
	0x06, 0x39, 0xe5, 0x11, 0x72, 0xf6, 0x2d, 0x0f, 0x92, 0x42, 0x03, 0x98, 0xc1, 0xec, 0xce, 0x90,
	0xe5, 0x5c, 0x72, 0x1b, 0x34, 0x1a, 0xfd, 0x6b, 0x00, 0xdd, 0xbf, 0x46, 0x0f, 0xb4, 0xd2, 0x71,
	0xd0, 0x63, 0xe3, 0xf0, 0xe9, 0x38, 0x4d, 0x64, 0x42, 0x16, 0xd2, 0x71, 0x30, 0xee, 0xb7, 0x1b,
	0xe9, 0x38, 0xd0, 0x92, 0xf6, 0xee, 0x30, 0x49, 0x86, 0x11, 0x3f, 0x60, 0xe3, 0xf0, 0x80, 0xc5,
	0x71, 0x22, 0x99, 0x0c, 0x93, 0x58, 0xe8, 0x59, 0xfa, 0x04, 0xd6, 0x4e, 0x27, 0x7d, 0x11, 0xa4,
	0x61, 0x9f, 0x77, 0xf9, 0xb7, 0x13, 0x2e, 0x24, 0xd9, 0x82, 0x45, 0x99, 0x8c, 0xc3, 0x40, 0xf8,
	0x5e, 0x67, 0x6e, 0xbf, 0xd1, 0x35, 0x23, 0xfa, 0x23, 0x58, 0x77, 0x74, 0xc5, 0x38, 0x89, 0x05,
	0x27, 0x9b, 0xb0, 0x80, 0xd3, 0xbe, 0xd7, 0xf1, 0xf6, 0x1b, 0x5d, 0x3d, 0x20, 0x04, 0xe6, 0x07,
	0x4c, 0x32, 0xbf, 0x86, 0x42, 0xfc, 0xa6, 0xdf, 0x79, 0x70, 0xe7, 0x84, 0xcb, 0xe3, 0x73, 0x16,
	0xc6, 0xa7, 0x92, 0xc9, 0xdc, 0xc6, 0x0e, 0xd4, 0x03, 0x25, 0xed, 0x85, 0x03, 0x34, 0xd3, 0xea,
	0x2e, 0xe1, 0xf8, 0xd5, 0x40, 0x19, 0x92, 0x2c, 0x8c, 0xac, 0x21, 0xf5, 0xad, 0x20, 0xcf, 0xc2,
	0x4b, 0x3e, 0xf0, 0xe7, 0x34, 0x24, 0x0e, 0x94, 0xd7, 0xe7, 0x3c, 0x1c, 0x9e, 0x4b, 0x7f, 0xbe,
	0xe3, 0xed, 0xcf, 0x77, 0xcd, 0x88, 0x7c, 0x00, 0x6b, 0xb8, 0xd5, 0x20, 0x89, 0x7a, 0x17, 0x3c,
	0x15, 0x61, 0x12, 0xfb, 0x0b, 0xb8, 0x70, 0xd5, 0xca, 0x7f, 0xae, 0xc5, 0x84, 0xc2, 0xb2, 0xb8,
	0x8a, 0x83, 0xf3, 0x34, 0x89, 0xc3, 0x6b, 0x3e, 0xf0, 0x17, 0x3b, 0xde, 0x7e, 0xbd, 0x5b, 0x90,
	0x11, 0x1f, 0x96, 0xac, 0x95, 0x25, 0xb4, 0x62, 0x87, 0xf4, 0xef, 0x35, 0x68, 0x1e, 0x05, 0x41,
	0x32, 0x89, 0xe5, 0xab, 0xf8, 0x2c, 0x51, 0x9a, 0x6c, 0x30, 0x48, 0xb9, 0x10, 0xe6, 0x6c, 0xec,
	0x50, 0xcd, 0xf4, 0x59, 0xc4, 0xe2, 0x80, 0x9b, 0x7d, 0xd9, 0x21, 0x79, 0x00, 0xcd, 0xb3, 0x34,
	0xb9, 0xe6, 0x71, 0xef, 0x6c, 0x12, 0xdb, 0x0d, 0x82, 0x16, 0xbd, 0x9c, 0xc4, 0x03, 0xa5, 0x30,
	0x8e, 0xf8, 0x60, 0xc8, 0xb5, 0xc2, 0xbc, 0x56, 0xd0, 0x22, 0x54, 0xd8, 0x84, 0x85, 0x38, 0x51,
	0x96, 0x17, 0xf0, 0x14, 0xf4, 0x80, 0x3c, 0x86, 0x95, 0x0b, 0x96, 0x86, 0xac, 0x1f, 0x71, 0xd1,
	0x3b, 0x67, 0xe2, 0x1c, 0xf7, 0xd6, 0xe8, 0xb6, 0x32, 0xe9, 0x17, 0x4c, 0x9c, 0x93, 0x87, 0xb0,
	0x1c, 0xa4, 0x7c, 0x10, 0xca, 0x5e, 0x18, 0x0f, 0xf8, 0xa5, 0xd9, 0x61, 0x53, 0xcb, 0x5e, 0x29,
	0x11, 0xf9, 0x0c, 0x9a, 0x63, 0x9e, 0x8e, 0x42, 0xa1, 0xf6, 0x2c, 0xfc, 0x7a, 0x67, 0x6e, 0xbf,
	0x79, 0xb8, 0xfe, 0x14, 0xc3, 0xee, 0xe9, 0x9b, 0x6c, 0xa6, 0xeb, 0x6a, 0x29, 0xa7, 0x84, 0xba,
	0x71, 0xbf, 0xd1, 0xf1, 0xf6, 0x17, 0xba, 0x7a, 0x40, 0xbf, 0x02, 0xc8, 0x17, 0x90, 0xf7, 0xa0,
	0xc5, 0x26, 0xf2, 0xbc, 0x17, 0x30, 0xc9, 0x87, 0x49, 0x7a, 0x65, 0x0e, 0x6d, 0x59, 0x09, 0x8f,
	0x8d, 0x4c, 0x39, 0x88, 0x4a, 0x23, 0x2e, 0x04, 0x1b, 0xaa, 0xe3, 0x53, 0x01, 0xda, 0x54, 0xb2,
	0xd7, 0x5a, 0x44, 0x7f, 0x03, 0xcb, 0xc7, 0x2c, 0x8a, 0xb2, 0xe0, 0xda, 0x82, 0xc5, 0x94, 0x8b,
	0x49, 0x24, 0x8d, 0x41, 0x33, 0x52, 0x27, 0xc9, 0x2f, 0x79, 0x30, 0x91, 0xbc, 0xc7, 0xd3, 0xd4,
	0x5c, 0x04, 0x18, 0xd1, 0x8b, 0x34, 0x55, 0x58, 0x5c, 0xc8, 0x70, 0xc4, 0x24, 0xef, 0x0d, 0x99,
	0x30, 0x97, 0xd1, 0xb4, 0xb2, 0x13, 0x26, 0xe8, 0xa7, 0xd0, 0x3c, 0x61, 0x22, 0x83, 0x5a, 0x83,
	0x39, 0xa5, 0xa8, 0x71, 0xd4, 0xa7, 0x92, 0xe4, 0xc6, 0xd5, 0x27, 0x3d, 0x80, 0x9d, 0x53, 0x1e,
	0x0f, 0xba, 0xec, 0xdd, 0x57, 0x29, 0x8b, 0x05, 0x0b, 0x54, 0x36, 0xda, 0xcc, 0xb3, 0x69, 0xa3,
	0x2c, 0x2c, 0x9b, 0xb4, 0xf9, 0x25, 0xac, 0x3d, 0x8f, 0x92, 0xe0, 0x1b, 0x75, 0x41, 0x47, 0xf1,
	0xe0, 0xe5, 0x24, 0x8a, 0x94, 0x1e, 0x5e, 0xa2, 0x46, 0xc2, 0x6f, 0x72, 0x08, 0x77, 0xce, 0x26,
	0x51, 0xd4, 0x3b, 0x0b, 0xa3, 0xa8, 0x27, 0x73, 0xdb, 0x08, 0x5e, 0xef, 0x6e, 0xa8, 0xc9, 0x97,
	0x61, 0x14, 0x39, 0xb0, 0xf4, 0x6f, 0xf3, 0x40, 0x0a, 0x6e, 0x04, 0x3c, 0x1c, 0xcb, 0x52, 0xf3,
	0x6e, 0x8e, 0xd6, 0x8a, 0x39, 0xfa, 0x10, 0x96, 0xfb, 0xca, 0xc3, 0x9e, 0xc9, 0xbf, 0x39, 0x8c,
	0xbc, 0x26, 0xca, 0xbe, 0xd0, 0x49, 0x48, 0x60, 0xfe, 0x2c, 0x4d, 0x46, 0x26, 0x5e, 0xf1, 0x9b,
	0xac, 0x40, 0x4d, 0x26, 0x26, 0x15, 0x6b, 0x32, 0x51, 0x41, 0x72, 0xc1, 0xa2, 0x09, 0x37, 0xa1,
	0xa9, 0x07, 0x79, 0x3c, 0x2f, 0xb9, 0xf1, 0xbc, 0x0b, 0x0d, 0x19, 0x8e, 0xb8, 0x90, 0x6c, 0x34,
	0xf6, 0xeb, 0x1d, 0x6f, 0x7f, 0xae, 0x9b, 0x0b, 0x90, 0x34, 0xae, 0xc6, 0x3a, 0xda, 0x14, 0x69,
	0x5c, 0x8d, 0x79, 0x76, 0xb4, 0x90, 0x33, 0x92, 0x92, 0x8d, 0xf8, 0x28, 0xf1, 0x9b, 0x5a, 0xa6,
	0xbe, 0x49, 0x1b, 0xea, 0xe3, 0x34, 0x4c, 0xd2, 0x50, 0x5e, 0xf9, 0xcb, 0xb8, 0xcf, 0x6c, 0x4c,
	0xee, 0x42, 0x63, 0xc8, 0x44, 0x2f, 0x0a, 0x47, 0xa1, 0xf4, 0x5b, 0xb8, 0xa8, 0x3e, 0x64, 0xe2,
	0x4b, 0x35, 0x56, 0x71, 0xa6, 0xc2, 0x7a, 0x22, 0xfc, 0x15, 0x5c, 0x66, 0x46, 0xea, 0xe0, 0xd4,
	0xa2, 0x89, 0xe0, 0x03, 0x7f, 0x55, 0x67, 0xfb, 0x90, 0x89, 0x9f, 0x09, 0x3e, 0x50, 0x21, 0xef,
	0x84, 0x60, 0x92, 0xfa, 0x6b, 0x3a, 0xe4, 0xf3, 0x20, 0x4c, 0x52, 0x95, 0xba, 0x56, 0xc9, 0xc4,
	0xf1, 0xba, 0x4e, 0x5d, 0x23, 0xed, 0xea, 0x70, 0xfe, 0x00, 0xd6, 0x82, 0x24, 0x96, 0x29, 0x0b,
	0x64, 0xcf, 0xd2, 0x0e, 0xd1, 0x34, 0x67, 0xe5, 0x47, 0x86, 0x7e, 0xf6, 0x60, 0x95, 0x47, 0x1c,
	0x6f, 0xdc, 0x9a, 0xdc, 0x40, 0xcd, 0x15, 0x2b, 0xd6, 0x36, 0xe9, 0x5b, 0x20, 0xcf, 0xf3, 0x4b,
	0xb4, 0xc1, 0x97, 0x13, 0xad, 0x57, 0x20, 0xda, 0xff, 0x26, 0x00, 0x8f, 0x61, 0xeb, 0xb8, 0xe8,
	0x9d, 0x4d, 0x85, 0xb2, 0xfd, 0x78, 0xa5, 0xfb, 0xa1, 0x0f, 0xa0, 0x91, 0x65, 0x48, 0x59, 0xec,
	0xd2, 0xc7, 0xd0, 0x74, 0xf6, 0x51, 0xb5, 0x01, 0xfa, 0x0d, 0xb4, 0x8e, 0x84, 0xe0, 0x32, 0xcb,
	0x67, 0x87, 0xa7, 0xbd, 0x1b, 0x79, 0xba, 0x76, 0x1b, 0x4f, 0xcf, 0x4d, 0xf3, 0x34, 0xfd, 0x7f,
	0xd8, 0x38, 0x0a, 0x64, 0x78, 0xc1, 0x8f, 0x55, 0xc1, 0xc8, 0x20, 0x15, 0xc1, 0xa1, 0xb8, 0x87,
	0x85, 0xc4, 0x94, 0xc3, 0x26, 0xcb, 0x55, 0xe9, 0xc7, 0xb0, 0xfd, 0x86, 0xc7, 0x83, 0x30, 0x1e,
	0x3a, 0x27, 0x29, 0x4e, 0xc3, 0x6b, 0x0c, 0x72, 0x11, 0x5e, 0x73, 0xb3, 0x2f, 0xfc, 0xa6, 0xcf,
	0x80, 0xcc, 0xaa, 0x93, 0x47, 0x30, 0x27, 0x2f, 0x75, 0x81, 0x6f, 0x1e, 0x12, 0x43, 0xdf, 0x2e,
	0x15, 0xa8, 0x69, 0xfa, 0x8f, 0x1a, 0x34, 0xdd, 0x55, 0xdf, 0x93, 0x18, 0x6c, 0xd6, 0xcf, 0xcd,
	0x64, 0xfd, 0xfc, 0x6c, 0xd6, 0x2f, 0x94, 0x66, 0xfd, 0xa2, 0x9b, 0xf5, 0x36, 0xaf, 0x97, 0x4a,
	0xf2, 0xba, 0xee, 0xe4, 0xb5, 0x9b, 0xc3, 0x8d, 0xa9, 0x1c, 0xb6, 0x39, 0x0f, 0x4e, 0xce, 0x17,
	0xf2, 0xba, 0x39, 0x95, 0xd7, 0x05, 0xaa, 0x59, 0x9e, 0xa6, 0x9a, 0x5d, 0x68, 0x88, 0x70, 0x18,
	0x33, 0x39, 0x49, 0xb9, 0xa1, 0x84, 0x5c, 0x40, 0x7f, 0x01, 0x0f, 0xd4, 0x8b, 0xc7, 0xc6, 0xeb,
	0x44, 0x9e, 0x27, 0x69, 0x78, 0xcd, 0x5c, 0xca, 0xaf, 0x7e, 0x25, 0xb4, 0xa1, 0x6e, 0x23, 0xdd,
	0x04, 0x58, 0x36, 0xa6, 0x6f, 0xa1, 0x53, 0x6d, 0xd8, 0x84, 0xd2, 0xe7, 0xb0, 0xc2, 0xdc, 0x09,
	0x7b, 0xdb, 0x9b, 0xe6, 0xb6, 0x8b, 0xab, 0xa6, 0x74, 0xe9, 0x29, 0xb4, 0x0a, 0x0a, 0xd9, 0xe1,
	0x7b, 0xce, 0xe1, 0xb7, 0xa1, 0x7e, 0x36, 0x89, 0xf3, 0x2c, 0x6f, 0x74, 0xb3, 0xb1, 0xd2, 0x4f,
	0x27, 0x11, 0xb7, 0x97, 0xaf, 0xbe, 0xe9, 0x0f, 0xe0, 0xae, 0xe3, 0xf6, 0x4b, 0xa3, 0x9a, 0xe5,
	0xbc, 0xbb, 0x63, 0x6f, 0x6a, 0xc7, 0x9f, 0xc3, 0x6e, 0xf9, 0x52, 0xb3, 0xdb, 0x5d, 0x68, 0x58,
	0x68, 0xfb, 0x6e, 0xcd, 0x05, 0xf4, 0xff, 0xa0, 0x7d, 0xc2, 0xa5, 0x79, 0x9d, 0x59, 0x23, 0xe2,
	0xd6, 0x3b, 0xa0, 0x3f, 0x44, 0x87, 0x67, 0xd7, 0xe5, 0xa0, 0xd6, 0xc1, 0x0c, 0x34, 0x13, 0xd0,
	0x3f, 0x7b, 0xb0, 0x75, 0xc2, 0xa5, 0x9b, 0xa5, 0xb7, 0xdf, 0xfa, 0x26, 0x2c, 0xe8, 0xb7, 0x57,
	0x4d, 0x47, 0x3e, 0x0e, 0x94, 0x54, 0xf3, 0x81, 0xae, 0xad, 0x7a, 0x50, 0xcd, 0xb8, 0xf3, 0xd5,
	0x8c, 0xfb, 0x16, 0xb6, 0x67, 0x7c, 0xca, 0xe9, 0xae, 0xc2, 0xa9, 0x0f, 0x35, 0x5b, 0x34, 0x31,
	0x7e, 0x76, 0x4a, 0xd8, 0x42, 0x3f, 0x1c, 0x34, 0x69, 0x1c, 0xc1, 0x3a, 0xb2, 0xed, 0x97, 0xa1,
	0xc8, 0x79, 0xed, 0x23, 0x58, 0xc4, 0xf7, 0xc0, 0x74, 0x10, 0xa2, 0xa6, 0xd5, 0xea, 0x1a, 0x1d,
	0xfa, 0x5d, 0x0d, 0x5a, 0x85, 0x99, 0x5b, 0x5a, 0x04, 0x24, 0xa5, 0x9a, 0x43, 0x4a, 0xf7, 0x00,
	0xfa, 0x5c, 0xc8, 0x1e, 0xda, 0xc3, 0x43, 0xab, 0x77, 0x1b, 0x4a, 0x82, 0x56, 0x75, 0xa0, 0x85,
	0x71, 0x9f, 0x09, 0x6e, 0xa8, 0x28, 0x1b, 0xab, 0xa5, 0xf8, 0x3c, 0xed, 0xa5, 0x49, 0x22, 0x0d,
	0x2b, 0x35, 0x50, 0xd2, 0x4d, 0x12, 0xa9, 0x1c, 0x91, 0x97, 0x42, 0x4f, 0xea, 0x87, 0xca, 0x92,
	0xbc, 0x14, 0x38, 0xa5, 0x38, 0x9f, 0xa5, 0x3c, 0x96, 0xfa, 0x85, 0xbd, 0x64, 0x38, 0x1f, 0x45,
	0x58, 0x9b, 0xf2, 0xc2, 0x53, 0x2f, 0x54, 0xce, 0x02, 0xc5, 0x34, 0xa6, 0x29, 0xe6, 0x91, 0xc3,
	0x58, 0xcd, 0xc3, 0x35, 0xf7, 0xe0, 0x5e, 0xf3, 0x51, 0x62, 0x38, 0xec, 0x7b, 0x5d, 0xd1, 0xc8,
	0x54, 0x4c, 0xb5, 0x9e, 0x7c, 0x02, 0x4b, 0x29, 0x7f, 0xc7, 0xd2, 0x81, 0xbd, 0x9b, 0x2d, 0x17,
	0x42, 0x15, 0xab, 0x17, 0xb1, 0x0c, 0xe5, 0x55, 0xd7, 0xaa, 0x91, 0xa7, 0xb0, 0xa8, 0x2b, 0x19,
	0xbe, 0xbf, 0xab, 0x17, 0x18, 0x2d, 0xfa, 0x07, 0x0f, 0x56, 0xa7, 0xe6, 0xfe, 0x37, 0xdd, 0x91,
	0xaa, 0xba, 0xc7, 0x79, 0x33, 0xe3, 0x56, 0xdd, 0x42, 0xdf, 0xe3, 0xcd, 0xf4, 0x3d, 0x87, 0xff,
	0x5c, 0x07, 0x38, 0x1a, 0x87, 0xa7, 0x3c, 0xbd, 0x08, 0x03, 0x4e, 0xfa, 0xd0, 0x2a, 0xf4, 0xb2,
	0x64, 0xdb, 0x9c, 0xc1, 0x4f, 0x92, 0xf8, 0x0d, 0x4b, 0xd9, 0xc8, 0xa6, 0x7a, 0x7b, 0xd7, 0x4c,
	0x94, 0xb6, 0xbe, 0xb4, 0xfd, 0xbb, 0x7f, 0xfd, 0xfb, 0x2f, 0xb5, 0x4d, 0x42, 0x0e, 0x2e, 0x3e,
	0xc5, 0x16, 0x1d, 0xa3, 0x1a, 0xc3, 0x8d, 0xfc, 0x14, 0x20, 0x27, 0x1f, 0xb2, 0x62, 0x69, 0x5b,
	0x1f, 0x53, 0xdb, 0x16, 0x6d, 0xa7, 0xe5, 0xa4, 0x0f, 0xd0, 0xda, 0x0e, 0xdd, 0xb4, 0xd6, 0x98,
	0x9e, 0x3c, 0x08, 0xe3, 0xb3, 0xe4, 0x99, 0xf7, 0x84, 0x70, 0x58, 0x55, 0xcd, 0x91, 0x5b, 0xd3,
	0x4b, 0x63, 0x45, 0xbb, 0xbe, 0x61, 0xa6, 0xdc, 0x7e, 0x8a, 0x52, 0xc4, 0xd8, 0xa5, 0xdb, 0x16,
	0x63, 0xca, 0xa0, 0x82, 0xf9, 0x1a, 0x9a, 0x2f, 0xf2, 0x36, 0xe9, 0x26, 0x08, 0xbb, 0x0b, 0xa7,
	0x8d, 0xa2, 0xf7, 0x11, 0xc1, 0xa7, 0x1b, 0x16, 0xc1, 0x69, 0xb9, 0x94, 0xf5, 0x6f, 0x81, 0xcc,
	0xb6, 0x50, 0xa4, 0x63, 0x2c, 0x55, 0x76, 0x57, 0xed, 0xad, 0x59, 0x37, 0x54, 0x5a, 0xd2, 0x87,
	0x88, 0x77, 0x97, 0x6e, 0x59, 0xbc, 0x94, 0xbd, 0x93, 0xc5, 0x0d, 0xfd, 0x1a, 0x56, 0x4e, 0xb8,
	0x26, 0x8f, 0xe7, 0x57, 0x98, 0xcb, 0xdb, 0x6e, 0xcc, 0x3b, 0xbd, 0x59, 0xbb, 0x94, 0xd9, 0xe8,
	0x3d, 0xc4, 0xd8, 0xa6, 0xd9, 0x3d, 0x23, 0x33, 0x1d, 0x28, 0xa2, 0x50, 0xf6, 0x2f, 0x60, 0x53,
	0xd9, 0xb7, 0x04, 0xf5, 0xfc, 0xca, 0x3c, 0x55, 0x77, 0x0a, 0x28, 0xee, 0x33, 0xbc, 0x02, 0xe7,
	0x63, 0xc4, 0xd9, 0xa3, 0xb4, 0x88, 0x53, 0x66, 0x5c, 0xe1, 0xa6, 0x88, 0xeb, 0x1c, 0x88, 0xd9,
	0x5d, 0xc5, 0x51, 0xb5, 0xab, 0x89, 0x85, 0xee, 0x21, 0xf2, 0x43, 0xba, 0x6b, 0x91, 0x87, 0x25,
	0x86, 0x15, 0xa6, 0x84, 0xd5, 0xa9, 0x0a, 0x44, 0xee, 0xe5, 0x39, 0x52, 0x52, 0x2d, 0xdb, 0xf7,
	0xab, 0xa6, 0xab, 0x42, 0xb2, 0x08, 0x8d, 0x41, 0xf3, 0x27, 0x0f, 0xdf, 0x62, 0x05, 0x8f, 0xa6,
	0x5a, 0x8f, 0xcc, 0x8d, 0xf2, 0x96, 0xe4, 0xa6, 0xcd, 0x1f, 0xa2, 0x07, 0x1f, 0xd1, 0xbd, 0xaa,
	0xcd, 0x4f, 0x99, 0x54, 0x1e, 0xfd, 0x0a, 0xd6, 0xdc, 0x6b, 0x29, 0x44, 0xd5, 0x0c, 0x8b, 0xac,
	0x4d, 0x87, 0x9b, 0xcd, 0x12, 0xb2, 0x55, 0xbc, 0x69, 0x55, 0xe4, 0xd0, 0xd4, 0xd7, 0xb0, 0x7c,
	0xc2, 0xe5, 0x6b, 0x76, 0x69, 0x42, 0xa9, 0xd2, 0x34, 0x99, 0x8d, 0x31, 0x4b, 0x24, 0x64, 0xbb,
	0x68, 0x7c, 0x94, 0x59, 0xfb, 0x31, 0xd4, 0x15, 0x37, 0xa9, 0x76, 0x69, 0x86, 0x99, 0xb2, 0x07,
	0xa6, 0xdb, 0x4c, 0x51, 0x1f, 0x4d, 0x12, 0xda, 0xca, 0xb8, 0x49, 0x4d, 0xab, 0x83, 0xe8, 0x63,
	0x72, 0x39, 0xdd, 0x50, 0xb5, 0xaf, 0xed, 0x8c, 0xf4, 0x66, 0x5a, 0x27, 0x7a, 0x17, 0x01, 0xee,
	0x90, 0x8d, 0x9c, 0xfc, 0x72, 0x8b, 0xbf, 0xf5, 0xf0, 0x05, 0x58, 0xd5, 0x38, 0x55, 0x02, 0xde,
	0xcf, 0xfe, 0x6c, 0x95, 0x2e, 0xa4, 0x4f, 0x10, 0xf4, 0x11, 0xc9, 0xf2, 0xed, 0x06, 0x10, 0x89,
	0xcf, 0xc1, 0x92, 0xd9, 0x6a, 0xf8, 0x9d, 0x4a, 0x78, 0xfa, 0x3e, 0x22, 0x77, 0xc8, 0xfd, 0x9b,
	0x91, 0xc9, 0x5f, 0x3d, 0xf0, 0xab, 0x7a, 0x05, 0xf2, 0xbe, 0x53, 0x9c, 0x6e, 0xe8, 0x52, 0xda,
	0x7b, 0xb7, 0xea, 0x99, 0x4b, 0xf8, 0x10, 0xbd, 0x7a, 0x4c, 0x3b, 0x8e, 0x57, 0xa5, 0x2b, 0xd4,
	0xc5, 0xff, 0xd1, 0x43, 0xfa, 0x99, 0x79, 0xd4, 0x13, 0x3a, 0x0b, 0x37, 0xdd, 0x2c, 0xb4, 0xdf,
	0xbb, 0x51, 0xc7, 0xb8, 0x33, 0x43, 0x4a, 0x65, 0xda, 0xca, 0x95, 0xdf, 0x7b, 0xb0, 0x51, 0xf2,
	0xd2, 0x27, 0x0f, 0x73, 0x94, 0x8a, 0xee, 0xa1, 0x4d, 0x6f, 0x52, 0x31, 0x7e, 0x98, 0xcb, 0xa2,
	0x77, 0x1d, 0x3f, 0xa6, 0x95, 0x75, 0x9d, 0x69, 0x64, 0xbf, 0xd8, 0xb3, 0xa8, 0x98, 0xfe, 0x41,
	0xdf, 0xf6, 0x67, 0x27, 0x0c, 0xce, 0x2e, 0xe2, 0x6c, 0xd1, 0x75, 0x8b, 0x23, 0xac, 0xca, 0x33,
	0xef, 0xc9, 0x27, 0x5e, 0x7f, 0x11, 0x7f, 0x79, 0x7f, 0xf6, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xca, 0x42, 0xc1, 0x79, 0x36, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiServiceClient interface {
	// Return the state of the neb.
	GetChainState(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetChainStateResponse, error)
	// get account info by address
	GetAccount(ctx context.Context, in *Address, opts ...grpc.CallOption) (*AccountInfo, error)
	// Call is the RPC API handler.
	CallTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*CallResponse, error)
	// EstimateGas
	EstimateGas(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*GasResponse, error)
	// Submit the signed transaction.
	SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*TransactionHash, error)
	// get block by hash
	GetBlockByHash(ctx context.Context, in *BlockHashAndFull, opts ...grpc.CallOption) (*BlockResponse, error)
	// get best block by height
	GetBestBlockByHeight(ctx context.Context, in *BlockHeightAndFull, opts ...grpc.CallOption) (*BlockResponse, error)
	//return transaction
	GetTransactionByHash(ctx context.Context, in *TransactionHash, opts ...grpc.CallOption) (*TransactionReceipt, error)
	GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error)
	//return transaction
	GetTransactionByContractAddress(ctx context.Context, in *ContractAddressRequest, opts ...grpc.CallOption) (*TransactionReceipt, error)
	// get best block hash
	GetBestBlockHash(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BlockHash, error)
	// get max block height
	GetMaxHeight(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BlockHeight, error)
	//return balance
	GetAsset(ctx context.Context, in *Address, opts ...grpc.CallOption) (*AssetResponse, error)
	// Return active count of the node
	GetActiveCount(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*ActiveCountResponse, error)
	// get pending transactions size
	GetPendingTransactionsSize(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*PendingTransactionsSize, error)
	// get pending transactions
	GetPendingTransactions(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*PendingTransaction, error)
	// get contract authorization information
	GetContractAuthorization(ctx context.Context, in *GetContractAuthorizationRequest, opts ...grpc.CallOption) (*GetContractAuthorizationResponse, error)
	GetContractFunctions(ctx context.Context, in *GetContractFunctionsRequest, opts ...grpc.CallOption) (*GetContractFunctionsResponse, error)
	GetAccountContracts(ctx context.Context, in *GetAccountContractsRequest, opts ...grpc.CallOption) (*GetAccountContractsResponse, error)
	// Subscribe message
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) GetChainState(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetChainStateResponse, error) {
	out := new(GetChainStateResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetChainState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAccount(ctx context.Context, in *Address, opts ...grpc.CallOption) (*AccountInfo, error) {
	out := new(AccountInfo)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CallTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*CallResponse, error) {
	out := new(CallResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/CallTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) EstimateGas(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*GasResponse, error) {
	out := new(GasResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/EstimateGas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*TransactionHash, error) {
	out := new(TransactionHash)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/SendRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlockByHash(ctx context.Context, in *BlockHashAndFull, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBestBlockByHeight(ctx context.Context, in *BlockHeightAndFull, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBestBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactionByHash(ctx context.Context, in *TransactionHash, opts ...grpc.CallOption) (*TransactionReceipt, error) {
	out := new(TransactionReceipt)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTransactionByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error) {
	out := new(GetTransactionsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactionByContractAddress(ctx context.Context, in *ContractAddressRequest, opts ...grpc.CallOption) (*TransactionReceipt, error) {
	out := new(TransactionReceipt)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTransactionByContractAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBestBlockHash(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BlockHash, error) {
	out := new(BlockHash)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBestBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetMaxHeight(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BlockHeight, error) {
	out := new(BlockHeight)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetMaxHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAsset(ctx context.Context, in *Address, opts ...grpc.CallOption) (*AssetResponse, error) {
	out := new(AssetResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetActiveCount(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*ActiveCountResponse, error) {
	out := new(ActiveCountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetActiveCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetPendingTransactionsSize(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*PendingTransactionsSize, error) {
	out := new(PendingTransactionsSize)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetPendingTransactionsSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetPendingTransactions(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*PendingTransaction, error) {
	out := new(PendingTransaction)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetPendingTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetContractAuthorization(ctx context.Context, in *GetContractAuthorizationRequest, opts ...grpc.CallOption) (*GetContractAuthorizationResponse, error) {
	out := new(GetContractAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetContractAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetContractFunctions(ctx context.Context, in *GetContractFunctionsRequest, opts ...grpc.CallOption) (*GetContractFunctionsResponse, error) {
	out := new(GetContractFunctionsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetContractFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAccountContracts(ctx context.Context, in *GetAccountContractsRequest, opts ...grpc.CallOption) (*GetAccountContractsResponse, error) {
	out := new(GetAccountContractsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetAccountContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ApiService_serviceDesc.Streams[0], "/rpcpb.ApiService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &apiServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ApiService_SubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type apiServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *apiServiceSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ApiServiceServer is the server API for ApiService service.
type ApiServiceServer interface {
	// Return the state of the neb.
	GetChainState(context.Context, *NonParamsRequest) (*GetChainStateResponse, error)
	// get account info by address
	GetAccount(context.Context, *Address) (*AccountInfo, error)
	// Call is the RPC API handler.
	CallTransaction(context.Context, *TransactionRequest) (*CallResponse, error)
	// EstimateGas
	EstimateGas(context.Context, *TransactionRequest) (*GasResponse, error)
	// Submit the signed transaction.
	SendRawTransaction(context.Context, *SendRawTransactionRequest) (*TransactionHash, error)
	// get block by hash
	GetBlockByHash(context.Context, *BlockHashAndFull) (*BlockResponse, error)
	// get best block by height
	GetBestBlockByHeight(context.Context, *BlockHeightAndFull) (*BlockResponse, error)
	//return transaction
	GetTransactionByHash(context.Context, *TransactionHash) (*TransactionReceipt, error)
	GetTransactions(context.Context, *GetTransactionsRequest) (*GetTransactionsResponse, error)
	//return transaction
	GetTransactionByContractAddress(context.Context, *ContractAddressRequest) (*TransactionReceipt, error)
	// get best block hash
	GetBestBlockHash(context.Context, *NonParamsRequest) (*BlockHash, error)
	// get max block height
	GetMaxHeight(context.Context, *NonParamsRequest) (*BlockHeight, error)
	//return balance
	GetAsset(context.Context, *Address) (*AssetResponse, error)
	// Return active count of the node
	GetActiveCount(context.Context, *NonParamsRequest) (*ActiveCountResponse, error)
	// get pending transactions size
	GetPendingTransactionsSize(context.Context, *NonParamsRequest) (*PendingTransactionsSize, error)
	// get pending transactions
	GetPendingTransactions(context.Context, *NonParamsRequest) (*PendingTransaction, error)
	// get contract authorization information
	GetContractAuthorization(context.Context, *GetContractAuthorizationRequest) (*GetContractAuthorizationResponse, error)
	GetContractFunctions(context.Context, *GetContractFunctionsRequest) (*GetContractFunctionsResponse, error)
	GetAccountContracts(context.Context, *GetAccountContractsRequest) (*GetAccountContractsResponse, error)
	// Subscribe message
	Subscribe(*SubscribeRequest, ApiService_SubscribeServer) error
}

// UnimplementedApiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (*UnimplementedApiServiceServer) GetChainState(ctx context.Context, req *NonParamsRequest) (*GetChainStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChainState not implemented")
}
func (*UnimplementedApiServiceServer) GetAccount(ctx context.Context, req *Address) (*AccountInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedApiServiceServer) CallTransaction(ctx context.Context, req *TransactionRequest) (*CallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallTransaction not implemented")
}
func (*UnimplementedApiServiceServer) EstimateGas(ctx context.Context, req *TransactionRequest) (*GasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EstimateGas not implemented")
}
func (*UnimplementedApiServiceServer) SendRawTransaction(ctx context.Context, req *SendRawTransactionRequest) (*TransactionHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRawTransaction not implemented")
}
func (*UnimplementedApiServiceServer) GetBlockByHash(ctx context.Context, req *BlockHashAndFull) (*BlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHash not implemented")
}
func (*UnimplementedApiServiceServer) GetBestBlockByHeight(ctx context.Context, req *BlockHeightAndFull) (*BlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBestBlockByHeight not implemented")
}
func (*UnimplementedApiServiceServer) GetTransactionByHash(ctx context.Context, req *TransactionHash) (*TransactionReceipt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionByHash not implemented")
}
func (*UnimplementedApiServiceServer) GetTransactions(ctx context.Context, req *GetTransactionsRequest) (*GetTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}
func (*UnimplementedApiServiceServer) GetTransactionByContractAddress(ctx context.Context, req *ContractAddressRequest) (*TransactionReceipt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionByContractAddress not implemented")
}
func (*UnimplementedApiServiceServer) GetBestBlockHash(ctx context.Context, req *NonParamsRequest) (*BlockHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBestBlockHash not implemented")
}
func (*UnimplementedApiServiceServer) GetMaxHeight(ctx context.Context, req *NonParamsRequest) (*BlockHeight, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMaxHeight not implemented")
}
func (*UnimplementedApiServiceServer) GetAsset(ctx context.Context, req *Address) (*AssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAsset not implemented")
}
func (*UnimplementedApiServiceServer) GetActiveCount(ctx context.Context, req *NonParamsRequest) (*ActiveCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveCount not implemented")
}
func (*UnimplementedApiServiceServer) GetPendingTransactionsSize(ctx context.Context, req *NonParamsRequest) (*PendingTransactionsSize, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPendingTransactionsSize not implemented")
}
func (*UnimplementedApiServiceServer) GetPendingTransactions(ctx context.Context, req *NonParamsRequest) (*PendingTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPendingTransactions not implemented")
}
func (*UnimplementedApiServiceServer) GetContractAuthorization(ctx context.Context, req *GetContractAuthorizationRequest) (*GetContractAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractAuthorization not implemented")
}
func (*UnimplementedApiServiceServer) GetContractFunctions(ctx context.Context, req *GetContractFunctionsRequest) (*GetContractFunctionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractFunctions not implemented")
}
func (*UnimplementedApiServiceServer) GetAccountContracts(ctx context.Context, req *GetAccountContractsRequest) (*GetAccountContractsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountContracts not implemented")
}
func (*UnimplementedApiServiceServer) Subscribe(req *SubscribeRequest, srv ApiService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_GetChainState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetChainState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetChainState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetChainState(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAccount(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CallTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CallTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/CallTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CallTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_EstimateGas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).EstimateGas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/EstimateGas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).EstimateGas(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SendRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/SendRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, req.(*SendRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHashAndFull)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlockByHash(ctx, req.(*BlockHashAndFull))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBestBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHeightAndFull)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBestBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBestBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBestBlockByHeight(ctx, req.(*BlockHeightAndFull))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactionByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactionByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTransactionByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactionByHash(ctx, req.(*TransactionHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactions(ctx, req.(*GetTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactionByContractAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContractAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactionByContractAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTransactionByContractAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactionByContractAddress(ctx, req.(*ContractAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBestBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBestBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBestBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBestBlockHash(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetMaxHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetMaxHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetMaxHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetMaxHeight(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAsset(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetActiveCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetActiveCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetActiveCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetActiveCount(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetPendingTransactionsSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetPendingTransactionsSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetPendingTransactionsSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetPendingTransactionsSize(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetPendingTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetPendingTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetPendingTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetPendingTransactions(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetContractAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractAuthorizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetContractAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetContractAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetContractAuthorization(ctx, req.(*GetContractAuthorizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetContractFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractFunctionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetContractFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetContractFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetContractFunctions(ctx, req.(*GetContractFunctionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAccountContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountContractsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAccountContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetAccountContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAccountContracts(ctx, req.(*GetAccountContractsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApiServiceServer).Subscribe(m, &apiServiceSubscribeServer{stream})
}

type ApiService_SubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type apiServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *apiServiceSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChainState",
			Handler:    _ApiService_GetChainState_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _ApiService_GetAccount_Handler,
		},
		{
			MethodName: "CallTransaction",
			Handler:    _ApiService_CallTransaction_Handler,
		},
		{
			MethodName: "EstimateGas",
			Handler:    _ApiService_EstimateGas_Handler,
		},
		{
			MethodName: "SendRawTransaction",
			Handler:    _ApiService_SendRawTransaction_Handler,
		},
		{
			MethodName: "GetBlockByHash",
			Handler:    _ApiService_GetBlockByHash_Handler,
		},
		{
			MethodName: "GetBestBlockByHeight",
			Handler:    _ApiService_GetBestBlockByHeight_Handler,
		},
		{
			MethodName: "GetTransactionByHash",
			Handler:    _ApiService_GetTransactionByHash_Handler,
		},
		{
			MethodName: "GetTransactions",
			Handler:    _ApiService_GetTransactions_Handler,
		},
		{
			MethodName: "GetTransactionByContractAddress",
			Handler:    _ApiService_GetTransactionByContractAddress_Handler,
		},
		{
			MethodName: "GetBestBlockHash",
			Handler:    _ApiService_GetBestBlockHash_Handler,
		},
		{
			MethodName: "GetMaxHeight",
			Handler:    _ApiService_GetMaxHeight_Handler,
		},
		{
			MethodName: "GetAsset",
			Handler:    _ApiService_GetAsset_Handler,
		},
		{
			MethodName: "GetActiveCount",
			Handler:    _ApiService_GetActiveCount_Handler,
		},
		{
			MethodName: "GetPendingTransactionsSize",
			Handler:    _ApiService_GetPendingTransactionsSize_Handler,
		},
		{
			MethodName: "GetPendingTransactions",
			Handler:    _ApiService_GetPendingTransactions_Handler,
		},
		{
			MethodName: "GetContractAuthorization",
			Handler:    _ApiService_GetContractAuthorization_Handler,
		},
		{
			MethodName: "GetContractFunctions",
			Handler:    _ApiService_GetContractFunctions_Handler,
		},
		{
			MethodName: "GetAccountContracts",
			Handler:    _ApiService_GetAccountContracts_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _ApiService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc_api.proto",
}
